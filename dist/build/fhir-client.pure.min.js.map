{"version":3,"file":"fhir-client.pure.min.js","mappings":"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","sources":["webpack://FHIR/./src/Client.ts","webpack://FHIR/./src/HttpError.ts","webpack://FHIR/./src/adapters/BrowserAdapter.ts","webpack://FHIR/./src/entry/browser.ts","webpack://FHIR/./src/lib.ts","webpack://FHIR/./src/security/index.ts","webpack://FHIR/./src/settings.ts","webpack://FHIR/./src/smart.ts","webpack://FHIR/./src/storage/BrowserStorage.ts","webpack://FHIR/./src/strings.ts","webpack://FHIR/./node_modules/debug/src/browser.js","webpack://FHIR/./node_modules/debug/src/common.js","webpack://FHIR/./node_modules/ms/index.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/compact/decrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/compact/encrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/general/decrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwe/general/encrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwk/embedded.js","webpack://FHIR/./node_modules/jose/dist/browser/jwk/thumbprint.js","webpack://FHIR/./node_modules/jose/dist/browser/jwks/local.js","webpack://FHIR/./node_modules/jose/dist/browser/jwks/remote.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/compact/sign.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/compact/verify.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/flattened/sign.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/general/sign.js","webpack://FHIR/./node_modules/jose/dist/browser/jws/general/verify.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/decrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/encrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/produce.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/sign.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/unsecured.js","webpack://FHIR/./node_modules/jose/dist/browser/jwt/verify.js","webpack://FHIR/./node_modules/jose/dist/browser/key/export.js","webpack://FHIR/./node_modules/jose/dist/browser/key/generate_key_pair.js","webpack://FHIR/./node_modules/jose/dist/browser/key/generate_secret.js","webpack://FHIR/./node_modules/jose/dist/browser/key/import.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/aesgcmkw.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/cek.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/check_iv_length.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/check_key_type.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/check_p2s.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/crypto_key.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/decrypt_key_management.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/encrypt_key_management.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/epoch.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/format_pem.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/is_object.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/iv.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/secs.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://FHIR/./node_modules/jose/dist/browser/lib/validate_crit.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/aeskw.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/asn1.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/base64url.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/bogus.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/check_cek_length.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/decrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/digest.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/ecdhes.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/encrypt.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/env.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/generate.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/key_to_jwk.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/pbes2kw.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/random.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/rsaes.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/sign.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/subtle_rsaes.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/timing_safe_equal.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/verify.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://FHIR/./node_modules/jose/dist/browser/runtime/zlib.js","webpack://FHIR/./node_modules/jose/dist/browser/util/base64url.js","webpack://FHIR/./node_modules/jose/dist/browser/util/decode_jwt.js","webpack://FHIR/./node_modules/jose/dist/browser/util/decode_protected_header.js","webpack://FHIR/./node_modules/jose/dist/browser/util/errors.js","webpack://FHIR/webpack/bootstrap","webpack://FHIR/webpack/runtime/define property getters","webpack://FHIR/webpack/runtime/hasOwnProperty shorthand","webpack://FHIR/webpack/runtime/make namespace object","webpack://FHIR/webpack/startup"],"sourcesContent":["import {\n    absolute,\n    debug as _debug,\n    getPath,\n    setPath,\n    jwtDecode,\n    makeArray,\n    request,\n    byCode,\n    byCodes,\n    units,\n    getPatientParam,\n    fetchConformanceStatement,\n    getAccessTokenExpiration,\n    assertJsonPatch,\n    assert\n} from \"./lib\";\n\nimport str from \"./strings\";\nimport { SMART_KEY, patientCompartment, fhirVersions } from \"./settings\";\nimport HttpError from \"./HttpError\";\nimport BrowserAdapter from \"./adapters/BrowserAdapter\";\nimport { fhirclient } from \"./types\";\n\n// $lab:coverage:off$\n// @ts-ignore\nconst { Response } = typeof FHIRCLIENT_PURE !== \"undefined\" ? window : require(\"cross-fetch\");\n// $lab:coverage:on$\n\nconst debug = _debug.extend(\"client\");\n\n/**\n * Adds patient context to requestOptions object to be used with [[Client.request]]\n * @param requestOptions Can be a string URL (relative to the serviceUrl), or an\n * object which will be passed to fetch()\n * @param client Current FHIR client object containing patient context\n * @return requestOptions object contextualized to current patient\n */\nasync function contextualize(\n    requestOptions: string | URL | fhirclient.RequestOptions,\n    client: Client\n): Promise<fhirclient.RequestOptions>\n{\n    const base = absolute(\"/\", client.state.serverUrl);\n\n    async function contextualURL(_url: URL) {\n        const resourceType = _url.pathname.split(\"/\").pop();\n        assert(resourceType, `Invalid url \"${_url}\"`);\n        assert(patientCompartment.indexOf(resourceType) > -1, `Cannot filter \"${resourceType}\" resources by patient`);\n        const conformance = await fetchConformanceStatement(client.state.serverUrl);\n        const searchParam = getPatientParam(conformance, resourceType);\n        _url.searchParams.set(searchParam, client.patient.id as string);\n        return _url.href;\n    }\n\n    if (typeof requestOptions == \"string\" || requestOptions instanceof URL) {\n        return { url: await contextualURL(new URL(requestOptions + \"\", base)) };\n    }\n\n    requestOptions.url = await contextualURL(new URL(requestOptions.url + \"\", base));\n    return requestOptions;\n}\n\n/**\n * Gets single reference by id. Caches the result.\n * @param refId\n * @param cache A map to store the resolved refs\n * @param client The client instance\n * @param [signal] The `AbortSignal` if any\n * @returns The resolved reference\n * @private\n */\nfunction getRef(\n    refId: string,\n    cache: Record<string, any>,\n    client: Client,\n    signal?: AbortSignal\n): Promise<fhirclient.JsonObject> {\n    if (!cache[refId]) {\n\n        // Note that we set cache[refId] immediately! When the promise is\n        // settled it will be updated. This is to avoid a ref being fetched\n        // twice because some of these requests are executed in parallel.\n        cache[refId] = client.request({\n            url: refId,\n            signal\n        }).then(res => {\n            cache[refId] = res;\n            return res;\n        }, (error: Error) => {\n            delete cache[refId];\n            throw error;\n        });\n    }\n\n    return Promise.resolve(cache[refId]);\n}\n\n/**\n * Resolves a reference in the given resource.\n * @param obj FHIR Resource\n */\nfunction resolveRef(\n    obj: fhirclient.FHIR.Resource,\n    path: string,\n    graph: boolean,\n    cache: fhirclient.JsonObject,\n    client: Client,\n    signal?: AbortSignal\n) {\n    const node = getPath(obj, path);\n    if (node) {\n        const isArray = Array.isArray(node);\n        return Promise.all(makeArray(node).filter(Boolean).map((item, i) => {\n            const ref = item.reference;\n            if (ref) {\n                return getRef(ref, cache, client, signal).then(sub => {\n                    if (graph) {\n                        if (isArray) {\n                            if (path.indexOf(\"..\") > -1) {\n                                setPath(obj, `${path.replace(\"..\", `.${i}.`)}`, sub);    \n                            } else {\n                                setPath(obj, `${path}.${i}`, sub);\n                            }\n                        } else {\n                            setPath(obj, path, sub);\n                        }\n                    }\n                }).catch((ex) => {\n                    /* ignore missing references */\n                    if (ex.status !== 404) {\n                        throw ex;\n                    }\n                });\n            }\n        }));\n    }\n}\n\n/**\n * Given a resource and a list of ref paths - resolves them all\n * @param obj FHIR Resource\n * @param fhirOptions The fhir options of the initiating request call\n * @param cache A map to store fetched refs\n * @param client The client instance\n * @private\n */\nfunction resolveRefs(\n    obj: fhirclient.FHIR.Resource,\n    fhirOptions: fhirclient.FhirOptions,\n    cache: fhirclient.JsonObject,\n    client: Client,\n    signal?: AbortSignal\n) {\n\n    // 1. Sanitize paths, remove any invalid ones\n    let paths = makeArray(fhirOptions.resolveReferences)\n        .filter(Boolean) // No false, 0, null, undefined or \"\"\n        .map(path => String(path).trim())\n        .filter(Boolean); // No space-only strings\n\n    // 2. Remove duplicates\n    paths = paths.filter((p, i) => {\n        const index = paths.indexOf(p, i + 1);\n        if (index > -1) {\n            debug(\"Duplicated reference path \\\"%s\\\"\", p);\n            return false;\n        }\n        return true;\n    });\n\n    // 3. Early exit if no valid paths are found\n    if (!paths.length) {\n        return Promise.resolve();\n    }\n\n    // 4. Group the paths by depth so that child refs are looked up\n    // after their parents!\n    const groups: Record<string, any> = {};\n    paths.forEach(path => {\n        const len = path.split(\".\").length;\n        if (!groups[len]) {\n            groups[len] = [];\n        }\n        groups[len].push(path);\n    });\n\n    // 5. Execute groups sequentially! Paths within same group are\n    // fetched in parallel!\n    let task: Promise<any> = Promise.resolve();\n    Object.keys(groups).sort().forEach(len => {\n        const group = groups[len];\n        task = task.then(() => Promise.all(group.map((path: string) => {\n            return resolveRef(obj, path, !!fhirOptions.graph, cache, client, signal);\n        })));\n    });\n    return task;\n}\n\n/**\n * This is a FHIR client that is returned to you from the `ready()` call of the\n * **SMART API**. You can also create it yourself if needed:\n *\n * ```js\n * // BROWSER\n * const client = FHIR.client(\"https://r4.smarthealthit.org\");\n *\n * // SERVER\n * const client = smart(req, res).client(\"https://r4.smarthealthit.org\");\n * ```\n */\nexport default class Client\n{\n    /**\n     * The state of the client instance is an object with various properties.\n     * It contains some details about how the client has been authorized and\n     * determines the behavior of the client instance. This state is persisted\n     * in `SessionStorage` in browsers or in request session on the servers.\n     */\n    readonly state: fhirclient.ClientState;\n\n    /**\n     * The adapter to use to connect to the current environment. Currently we have:\n     * - BrowserAdapter - for browsers\n     * - NodeAdapter - for Express or vanilla NodeJS servers\n     * - HapiAdapter - for HAPI NodeJS servers\n     */\n    readonly environment: fhirclient.Adapter;\n\n    /**\n     * A SMART app is typically associated with a patient. This is a namespace\n     * for the patient-related functionality of the client.\n     */\n    readonly patient: {\n\n        /**\n         * The ID of the current patient or `null` if there is no current patient\n         */\n        id: string | null\n\n        /**\n         * A method to fetch the current patient resource from the FHIR server.\n         * If there is no patient context, it will reject with an error.\n         * @param {fhirclient.FetchOptions} [requestOptions] Any options to pass to the `fetch` call.\n         * @category Request\n         */\n        read: fhirclient.RequestFunction<fhirclient.FHIR.Patient>\n        \n        /**\n         * This is similar to [[Client.request]] but it makes requests in the\n         * context of the current patient. For example, instead of doing\n         * ```js\n         * client.request(\"Observation?patient=\" + client.patient.id)\n         * ```\n         * you can do\n         * ```js\n         * client.patient.request(\"Observation\")\n         * ```\n         * The return type depends on the arguments. Typically it will be the\n         * response payload JSON object. Can also be a string or the `Response`\n         * object itself if we have received a non-json result, which allows us\n         * to handle even binary responses. Can also be a [[CombinedFetchResult]]\n         * object if the `requestOptions.includeResponse`s has been set to true.\n         * @category Request\n         */\n        request: <R = fhirclient.FetchResult>(\n            requestOptions: string|URL|fhirclient.RequestOptions,\n            fhirOptions?: fhirclient.FhirOptions\n        ) => Promise<R>\n\n        /**\n         * This is the FhirJS Patient API. It will ONLY exist if the `Client`\n         * instance is \"connected\" to FhirJS.\n         */\n        api?: Record<string, any>\n    };\n\n    /**\n     * The client may be associated with a specific encounter, if the scopes\n     * permit that and if the back-end server supports that. This is a namespace\n     * for encounter-related functionality.\n     */\n    readonly encounter: {\n\n        /**\n         * The ID of the current encounter or `null` if there is no current\n         * encounter\n         */\n        id: string | null\n\n        /**\n         * A method to fetch the current encounter resource from the FHIR server.\n         * If there is no encounter context, it will reject with an error.\n         * @param [requestOptions] Any options to pass to the `fetch` call.\n         * @category Request\n         */\n        read: fhirclient.RequestFunction<fhirclient.FHIR.Encounter>\n    };\n\n    /**\n     * The client may be associated with a specific user, if the scopes\n     * permit that. This is a namespace for user-related functionality.\n     */\n    readonly user: {\n\n        /**\n         * The ID of the current user or `null` if there is no current user\n         */\n        id: string | null\n\n        /**\n         * A method to fetch the current user resource from the FHIR server.\n         * If there is no user context, it will reject with an error.\n         * @param [requestOptions] Any options to pass to the `fetch` call.\n         * @category Request\n         */\n        read: fhirclient.RequestFunction<\n            fhirclient.FHIR.Patient |\n            fhirclient.FHIR.Practitioner |\n            fhirclient.FHIR.RelatedPerson\n        >\n\n        /**\n         * Returns the profile of the logged_in user (if any), or null if the\n         * user is not available. This is a string having the shape\n         * `{user type}/{user id}`. For example `Practitioner/abc` or\n         * `Patient/xyz`.\n         * @alias client.getFhirUser()\n         */\n        fhirUser: string | null\n\n        /**\n         * Returns the type of the logged-in user or null. The result can be\n         * `Practitioner`, `Patient` or `RelatedPerson`.\n         * @alias client.getUserType()\n         */\n        resourceType: string | null\n    };\n\n    /**\n     * The [FhirJS](https://github.com/FHIR/fhir.js/blob/master/README.md) API.\n     * **NOTE:** This will only be available if `fhir.js` is used. Otherwise it\n     * will be `undefined`.\n     */\n    api: Record<string, any> | undefined;\n\n    /**\n     * Refers to the refresh task while it is being performed.\n     * @see [[refresh]]\n     */\n    private _refreshTask: Promise<any> | null;\n\n    /**\n     * Validates the parameters, creates an instance and tries to connect it to\n     * FhirJS, if one is available globally.\n     */\n    constructor(environment: fhirclient.Adapter, state: fhirclient.ClientState | string)\n    {\n        const _state = typeof state == \"string\" ? { serverUrl: state } : state;\n\n        // Valid serverUrl is required!\n        assert(\n            _state.serverUrl && _state.serverUrl.match(/https?:\\/\\/.+/),\n            \"A \\\"serverUrl\\\" option is required and must begin with \\\"http(s)\\\"\"\n        );\n\n        this.state = _state;\n        this.environment = environment;\n        this._refreshTask = null;\n\n        const client = this;\n\n        // patient api ---------------------------------------------------------\n        this.patient = {\n            get id() { return client.getPatientId(); },\n            read: (requestOptions) => {\n                const id = this.patient.id;\n                return id ?\n                    this.request({ ...requestOptions, url: `Patient/${id}` }) :\n                    Promise.reject(new Error(\"Patient is not available\"));\n            },\n            request: (requestOptions, fhirOptions = {}) => {\n                if (this.patient.id) {\n                    return (async () => {\n                        const options = await contextualize(requestOptions, this);\n                        return this.request(options, fhirOptions);\n                    })();\n                } else {\n                    return Promise.reject(new Error(\"Patient is not available\"));\n                }\n            }\n        };\n\n        // encounter api -------------------------------------------------------\n        this.encounter = {\n            get id() { return client.getEncounterId(); },\n            read: requestOptions => {\n                const id = this.encounter.id;\n                return id ?\n                    this.request({ ...requestOptions, url: `Encounter/${id}` }) :\n                    Promise.reject(new Error(\"Encounter is not available\"));\n            }\n        };\n\n        // user api ------------------------------------------------------------\n        this.user = {\n            get fhirUser() { return client.getFhirUser(); },\n            get id() { return client.getUserId(); },\n            get resourceType() { return client.getUserType(); },\n            read: requestOptions => {\n                const fhirUser = this.user.fhirUser;\n                return fhirUser ?\n                    this.request({ ...requestOptions, url: fhirUser }) :\n                    Promise.reject(new Error(\"User is not available\"));\n            }\n        };\n\n        // fhir.js api (attached automatically in browser)\n        // ---------------------------------------------------------------------\n        this.connect((environment as BrowserAdapter).fhir);\n    }\n\n    /**\n     * This method is used to make the \"link\" between the `fhirclient` and the\n     * `fhir.js`, if one is available.\n     * **Note:** This is called by the constructor. If fhir.js is available in\n     * the global scope as `fhir`, it will automatically be linked to any [[Client]]\n     * instance. You should only use this method to connect to `fhir.js` which\n     * is not global.\n     */\n    connect(fhirJs?: (options: Record<string, any>) => Record<string, any>): Client\n    {\n        if (typeof fhirJs == \"function\") {\n            const options: Record<string, any> = {\n                baseUrl: this.state.serverUrl.replace(/\\/$/, \"\")\n            };\n\n            const accessToken = this.getState(\"tokenResponse.access_token\");\n            if (accessToken) {\n                options.auth = { token: accessToken };\n            }\n            else {\n                const { username, password } = this.state;\n                if (username && password) {\n                    options.auth = {\n                        user: username,\n                        pass: password\n                    };\n                }\n            }\n            this.api = fhirJs(options);\n\n            const patientId = this.getState(\"tokenResponse.patient\");\n            if (patientId) {\n                this.patient.api = fhirJs({\n                    ...options,\n                    patient: patientId\n                });\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Returns the ID of the selected patient or null. You should have requested\n     * \"launch/patient\" scope. Otherwise this will return null.\n     */\n    getPatientId(): string | null\n    {\n        const tokenResponse = this.state.tokenResponse;\n        if (tokenResponse) {\n            // We have been authorized against this server but we don't know\n            // the patient. This should be a scope issue.\n            if (!tokenResponse.patient) {\n                if (!(this.state.scope || \"\").match(/\\blaunch(\\/patient)?\\b/)) {\n                    debug(str.noScopeForId, \"patient\", \"patient\");\n                }\n                else {\n                    // The server should have returned the patient!\n                    debug(\"The ID of the selected patient is not available. Please check if your server supports that.\");\n                }\n                return null;\n            }\n            return tokenResponse.patient;\n        }\n\n        if (this.state.authorizeUri) {\n            debug(str.noIfNoAuth, \"the ID of the selected patient\");\n        }\n        else {\n            debug(str.noFreeContext, \"selected patient\");\n        }\n        return null;\n    }\n\n    /**\n     * Returns the ID of the selected encounter or null. You should have\n     * requested \"launch/encounter\" scope. Otherwise this will return null.\n     * Note that not all servers support the \"launch/encounter\" scope so this\n     * will be null if they don't.\n     */\n    getEncounterId(): string | null\n    {\n        const tokenResponse = this.state.tokenResponse;\n        if (tokenResponse) {\n            // We have been authorized against this server but we don't know\n            // the encounter. This should be a scope issue.\n            if (!tokenResponse.encounter) {\n                if (!(this.state.scope || \"\").match(/\\blaunch(\\/encounter)?\\b/)) {\n                    debug(str.noScopeForId, \"encounter\", \"encounter\");\n                }\n                else {\n                    // The server should have returned the encounter!\n                    debug(\"The ID of the selected encounter is not available. Please check if your server supports that, and that the selected patient has any recorded encounters.\");\n                }\n                return null;\n            }\n            return tokenResponse.encounter;\n        }\n\n        if (this.state.authorizeUri) {\n            debug(str.noIfNoAuth, \"the ID of the selected encounter\");\n        }\n        else {\n            debug(str.noFreeContext, \"selected encounter\");\n        }\n        return null;\n    }\n\n    /**\n     * Returns the (decoded) id_token if any. You need to request \"openid\" and\n     * \"profile\" scopes if you need to receive an id_token (if you need to know\n     * who the logged-in user is).\n     */\n    getIdToken(): fhirclient.IDToken | null\n    {\n        const tokenResponse = this.state.tokenResponse;\n        if (tokenResponse) {\n            const idToken = tokenResponse.id_token;\n            const scope = this.state.scope || \"\";\n\n            // We have been authorized against this server but we don't have\n            // the id_token. This should be a scope issue.\n            if (!idToken) {\n                const hasOpenid   = scope.match(/\\bopenid\\b/);\n                const hasProfile  = scope.match(/\\bprofile\\b/);\n                const hasFhirUser = scope.match(/\\bfhirUser\\b/);\n                if (!hasOpenid || !(hasFhirUser || hasProfile)) {\n                    debug(\n                        \"You are trying to get the id_token but you are not \" +\n                        \"using the right scopes. Please add 'openid' and \" +\n                        \"'fhirUser' or 'profile' to the scopes you are \" +\n                        \"requesting.\"\n                    );\n                }\n                else {\n                    // The server should have returned the id_token!\n                    debug(\"The id_token is not available. Please check if your server supports that.\");\n                }\n                return null;\n            }\n            return jwtDecode(idToken, this.environment) as fhirclient.IDToken;\n        }\n        if (this.state.authorizeUri) {\n            debug(str.noIfNoAuth, \"the id_token\");\n        }\n        else {\n            debug(str.noFreeContext, \"id_token\");\n        }\n        return null;\n    }\n\n    /**\n     * Returns the profile of the logged_in user (if any). This is a string\n     * having the following shape `\"{user type}/{user id}\"`. For example:\n     * `\"Practitioner/abc\"` or `\"Patient/xyz\"`.\n     */\n    getFhirUser(): string | null\n    {\n        const idToken = this.getIdToken();\n        if (idToken) {\n            // Epic may return a full url\n            // @see https://github.com/smart-on-fhir/client-js/issues/105\n            if (idToken.fhirUser) {\n                return idToken.fhirUser.split(\"/\").slice(-2).join(\"/\");\n            }\n            return idToken.profile\n        }\n        return null;\n    }\n\n    /**\n     * Returns the user ID or null.\n     */\n    getUserId(): string | null\n    {\n        const profile = this.getFhirUser();\n        if (profile) {\n            return profile.split(\"/\")[1];\n        }\n        return null;\n    }\n\n    /**\n     * Returns the type of the logged-in user or null. The result can be\n     * \"Practitioner\", \"Patient\" or \"RelatedPerson\".\n     */\n    getUserType(): string | null\n    {\n        const profile = this.getFhirUser();\n        if (profile) {\n            return profile.split(\"/\")[0];\n        }\n        return null;\n    }\n\n    /**\n     * Builds and returns the value of the `Authorization` header that can be\n     * sent to the FHIR server\n     */\n    getAuthorizationHeader(): string | null\n    {\n        const accessToken = this.getState(\"tokenResponse.access_token\");\n        if (accessToken) {\n            return \"Bearer \" + accessToken;\n        }\n        const { username, password } = this.state;\n        if (username && password) {\n            return \"Basic \" + this.environment.btoa(username + \":\" + password);\n        }\n        return null;\n    }\n\n    /**\n     * Used internally to clear the state of the instance and the state in the\n     * associated storage.\n     */\n    private async _clearState() {\n        const storage = this.environment.getStorage();\n        const key = await storage.get(SMART_KEY);\n        if (key) {\n            await storage.unset(key);\n        }\n        await storage.unset(SMART_KEY);\n        this.state.tokenResponse = {};\n    }\n\n    /**\n     * Creates a new resource in a server-assigned location\n     * @see http://hl7.org/fhir/http.html#create\n     * @param resource A FHIR resource to be created\n     * @param [requestOptions] Any options to be passed to the fetch call.\n     * Note that `method` and `body` will be ignored.\n     * @category Request\n     */\n    create<R = fhirclient.FHIR.Resource, O extends fhirclient.FetchOptions = {}>(\n        resource: fhirclient.FHIR.Resource,\n        requestOptions?: O\n    ): Promise<O[\"includeResponse\"] extends true ? fhirclient.CombinedFetchResult<R> : R>\n    {\n        return this.request({\n            ...requestOptions,\n            url: `${resource.resourceType}`,\n            method: \"POST\",\n            body: JSON.stringify(resource),\n            headers: {\n                // TODO: Do we need to alternate with \"application/json+fhir\"?\n                \"Content-Type\": \"application/json\",\n                ...(requestOptions || {}).headers\n            }\n        });\n    }\n\n    /**\n     * Creates a new current version for an existing resource or creates an\n     * initial version if no resource already exists for the given id.\n     * @see http://hl7.org/fhir/http.html#update\n     * @param resource A FHIR resource to be updated\n     * @param requestOptions Any options to be passed to the fetch call.\n     * Note that `method` and `body` will be ignored.\n     * @category Request\n     */\n    update<R = fhirclient.FHIR.Resource, O extends fhirclient.FetchOptions = {}>(\n        resource: fhirclient.FHIR.Resource,\n        requestOptions?: O\n    ): Promise<O[\"includeResponse\"] extends true ? fhirclient.CombinedFetchResult<R> : R>\n    {\n        return this.request({\n            ...requestOptions,\n            url: `${resource.resourceType}/${resource.id}`,\n            method: \"PUT\",\n            body: JSON.stringify(resource),\n            headers: {\n                // TODO: Do we need to alternate with \"application/json+fhir\"?\n                \"Content-Type\": \"application/json\",\n                ...(requestOptions || {}).headers\n            }\n        });\n    }\n\n    /**\n     * Removes an existing resource.\n     * @see http://hl7.org/fhir/http.html#delete\n     * @param url Relative URI of the FHIR resource to be deleted\n     * (format: `resourceType/id`)\n     * @param requestOptions Any options (except `method` which will be fixed\n     * to `DELETE`) to be passed to the fetch call.\n     * @category Request\n     */\n    delete<R = unknown>(url: string, requestOptions: fhirclient.FetchOptions = {}): Promise<R>\n    {\n        return this.request<R>({\n            ...requestOptions,\n            url,\n            method: \"DELETE\"\n        });\n    }\n\n    /**\n     * Makes a JSON Patch to the given resource\n     * @see http://hl7.org/fhir/http.html#patch\n     * @param url Relative URI of the FHIR resource to be patched\n     * (format: `resourceType/id`)\n     * @param patch A JSON Patch array to send to the server, For details\n     * see https://datatracker.ietf.org/doc/html/rfc6902\n     * @param requestOptions Any options to be passed to the fetch call,\n     * except for `method`, `url` and `body` which cannot be overridden.\n     * @since 2.4.0\n     * @category Request\n     * @typeParam ResolveType This method would typically resolve with the\n     * patched resource or reject with an OperationOutcome. However, this may\n     * depend on the server implementation or even on the request headers.\n     * For that reason, if the default resolve type (which is\n     * [[fhirclient.FHIR.Resource]]) does not work for you, you can pass\n     * in your own resolve type parameter.\n     */\n    async patch<ResolveType=fhirclient.FHIR.Resource>(url: string, patch: fhirclient.JsonPatch, requestOptions: fhirclient.FetchOptions = {}): Promise<ResolveType>\n    {\n        assertJsonPatch(patch);\n        return this.request<ResolveType>({\n            ...requestOptions,\n            url,\n            method: \"PATCH\",\n            body: JSON.stringify(patch),\n            headers: {\n                \"prefer\": \"return=presentation\",\n                \"content-type\": \"application/json-patch+json; charset=UTF-8\",\n                ...requestOptions.headers,\n            }\n        });\n    }\n\n    /**\n     * @param requestOptions Can be a string URL (relative to the serviceUrl),\n     * or an object which will be passed to fetch()\n     * @param fhirOptions Additional options to control the behavior\n     * @param _resolvedRefs DO NOT USE! Used internally.\n     * @category Request\n     */\n    async request<T = any>(\n        requestOptions: string|URL|fhirclient.RequestOptions,\n        fhirOptions: fhirclient.FhirOptions = {},\n        _resolvedRefs: fhirclient.JsonObject = {}\n    ): Promise<T>\n    {\n        const debugRequest = _debug.extend(\"client:request\");\n        assert(requestOptions, \"request requires an url or request options as argument\");\n\n        // url -----------------------------------------------------------------\n        let url: string;\n        if (typeof requestOptions == \"string\" || requestOptions instanceof URL) {\n            url = String(requestOptions);\n            requestOptions = {} as fhirclient.RequestOptions;\n        }\n        else {\n            url = String(requestOptions.url);\n        }\n\n        url = absolute(url, this.state.serverUrl);\n\n        const options = {\n            graph: fhirOptions.graph !== false,\n            flat : !!fhirOptions.flat,\n            pageLimit: fhirOptions.pageLimit ?? 1,\n            resolveReferences: (fhirOptions.resolveReferences || []) as string[],\n            useRefreshToken: fhirOptions.useRefreshToken !== false,\n            onPage: typeof fhirOptions.onPage == \"function\" ?\n                fhirOptions.onPage as (\n                    data: fhirclient.JsonObject | fhirclient.JsonObject[],\n                    references?: fhirclient.JsonObject | undefined) => any :\n                undefined\n        };\n\n        const signal = (requestOptions as RequestInit).signal || undefined;\n\n        // Refresh the access token if needed\n        const job = options.useRefreshToken ?\n            this.refreshIfNeeded({ signal }).then(() => requestOptions as fhirclient.RequestOptions) :\n            Promise.resolve(requestOptions as fhirclient.RequestOptions);\n\n        let response: Response | undefined;\n\n        return job\n\n            // Add the Authorization header now, after the access token might\n            // have been updated\n            .then(requestOptions => {\n                const authHeader = this.getAuthorizationHeader();\n                if (authHeader) {\n                    requestOptions.headers = {\n                        ...requestOptions.headers,\n                        Authorization: authHeader\n                    };\n                }\n                return requestOptions;\n            })\n            \n            // Make the request\n            .then(requestOptions => {\n                debugRequest(\n                    \"%s, options: %O, fhirOptions: %O\",\n                    url,\n                    requestOptions,\n                    options\n                );\n                return request<fhirclient.FetchResult>(url, requestOptions).then(result => {\n                    if (requestOptions.includeResponse) {\n                        response = (result as fhirclient.CombinedFetchResult).response;\n                        return (result as fhirclient.CombinedFetchResult).body;\n                    }\n                    return result;\n                });\n            })\n\n            // Handle 401 ------------------------------------------------------\n            .catch(async (error: HttpError) => {\n                if (error.status == 401) {\n\n                    // !accessToken -> not authorized -> No session. Need to launch.\n                    if (!this.getState(\"tokenResponse.access_token\")) {\n                        error.message += \"\\nThis app cannot be accessed directly. Please launch it as SMART app!\";\n                        throw error;\n                    }\n\n                    // auto-refresh not enabled and Session expired.\n                    // Need to re-launch. Clear state to start over!\n                    if (!options.useRefreshToken) {\n                        debugRequest(\"Your session has expired and the useRefreshToken option is set to false. Please re-launch the app.\");\n                        await this._clearState();\n                        error.message += \"\\n\" + str.expired;\n                        throw error;\n                    }\n\n                    // In rare cases we may have a valid access token and a refresh\n                    // token and the request might still fail with 401 just because\n                    // the access token has just been revoked.\n\n                    // otherwise -> auto-refresh failed. Session expired.\n                    // Need to re-launch. Clear state to start over!\n                    debugRequest(\"Auto-refresh failed! Please re-launch the app.\");\n                    await this._clearState();\n                    error.message += \"\\n\" + str.expired;\n                    throw error;\n                }\n                throw error;\n            })\n\n            // Handle 403 ------------------------------------------------------\n            .catch((error: HttpError) => {\n                if (error.status == 403) {\n                    debugRequest(\"Permission denied! Please make sure that you have requested the proper scopes.\");\n                }\n                throw error;\n            })\n\n            .then((data: any) => {\n\n                // At this point we don't know what `data` actually is!\n\n                // We might gen an empty or falsy result. If so return it as is\n                if (!data)\n                    return data;\n                \n                // Handle raw responses\n                if (typeof data == \"string\" || data instanceof Response)\n                    return data;\n\n                // Resolve References ------------------------------------------\n                return (async (_data: fhirclient.FHIR.Resource) => {\n\n                    if (_data.resourceType == \"Bundle\") {\n                        await Promise.all(((_data as fhirclient.FHIR.Bundle).entry || []).map(item => resolveRefs(\n                            item.resource,\n                            options,\n                            _resolvedRefs,\n                            this,\n                            signal\n                        )));\n                    }\n                    else {\n                        await resolveRefs(\n                            _data,\n                            options,\n                            _resolvedRefs,\n                            this,\n                            signal\n                        );\n                    }\n\n                    return _data;\n                })(data)\n\n                    // Pagination ----------------------------------------------\n                    .then(async _data => {\n                        if (_data && _data.resourceType == \"Bundle\") {\n                            const links = (_data.link || []) as fhirclient.FHIR.BundleLink[];\n\n                            if (options.flat) {\n                                _data = (_data.entry || []).map(\n                                    (entry: fhirclient.FHIR.BundleEntry) => entry.resource\n                                );\n                            }\n\n                            if (options.onPage) {\n                                await options.onPage(_data, { ..._resolvedRefs });\n                            }\n\n                            if (--options.pageLimit) {\n                                const next = links.find(l => l.relation == \"next\");\n                                _data = makeArray(_data);\n                                if (next && next.url) {\n                                    const nextPage = await this.request(\n                                        {\n                                            url: next.url,\n\n                                            // Aborting the main request (even after it is complete)\n                                            // must propagate to any child requests and abort them!\n                                            // To do so, just pass the same AbortSignal if one is\n                                            // provided.\n                                            signal\n                                        },\n                                        options,\n                                        _resolvedRefs\n                                    );\n\n                                    if (options.onPage) {\n                                        return null;\n                                    }\n\n                                    if (options.resolveReferences.length) {\n                                        Object.assign(_resolvedRefs, nextPage.references);\n                                        return _data.concat(makeArray(nextPage.data || nextPage));\n                                    }\n                                    return _data.concat(makeArray(nextPage));\n                                }\n                            }\n                        }\n                        return _data;\n                    })\n\n                    // Finalize ------------------------------------------------\n                    .then(_data => {\n                        if (options.graph) {\n                            _resolvedRefs = {};\n                        }\n                        else if (!options.onPage && options.resolveReferences.length) {\n                            return {\n                                data: _data,\n                                references: _resolvedRefs\n                            };\n                        }\n                        return _data;\n                    })\n                    .then(_data => {\n                        if ((requestOptions as fhirclient.FetchOptions).includeResponse) {\n                            return {\n                                body: _data,\n                                response\n                            }\n                        }\n                        return _data;\n                    });\n            });\n    }\n\n    /**\n     * Checks if access token and refresh token are present. If they are, and if\n     * the access token is expired or is about to expire in the next 10 seconds,\n     * calls `this.refresh()` to obtain new access token.\n     * @param requestOptions Any options to pass to the fetch call. Most of them\n     * will be overridden, bit it might still be useful for passing additional\n     * request options or an abort signal.\n     * @category Request\n     */\n    refreshIfNeeded(requestOptions: RequestInit = {}): Promise<fhirclient.ClientState>\n    {\n        const accessToken  = this.getState(\"tokenResponse.access_token\");\n        const refreshToken = this.getState(\"tokenResponse.refresh_token\");\n        const expiresAt    = this.state.expiresAt || 0;\n\n        if (accessToken && refreshToken && expiresAt - 10 < Date.now() / 1000) {\n            return this.refresh(requestOptions);\n        }\n\n        return Promise.resolve(this.state);\n    }\n\n    /**\n     * Use the refresh token to obtain new access token. If the refresh token is\n     * expired (or this fails for any other reason) it will be deleted from the\n     * state, so that we don't enter into loops trying to re-authorize.\n     *\n     * This method is typically called internally from [[Client.request]] if\n     * certain request fails with 401.\n     *\n     * @param requestOptions Any options to pass to the fetch call. Most of them\n     * will be overridden, bit it might still be useful for passing additional\n     * request options or an abort signal.\n     * @category Request\n     */\n    refresh(requestOptions: RequestInit = {}): Promise<fhirclient.ClientState>\n    {\n        const debugRefresh = _debug.extend(\"client:refresh\");\n        debugRefresh(\"Attempting to refresh with refresh_token...\");\n\n        const refreshToken = this.state?.tokenResponse?.refresh_token;\n        assert(refreshToken, \"Unable to refresh. No refresh_token found.\");\n\n        const tokenUri = this.state.tokenUri;\n        assert(tokenUri, \"Unable to refresh. No tokenUri found.\");\n\n        const scopes = this.getState(\"tokenResponse.scope\") || \"\";\n        const hasOfflineAccess = scopes.search(/\\boffline_access\\b/) > -1;\n        const hasOnlineAccess = scopes.search(/\\bonline_access\\b/) > -1;\n        assert(hasOfflineAccess || hasOnlineAccess, \"Unable to refresh. No offline_access or online_access scope found.\");\n\n        // This method is typically called internally from `request` if certain\n        // request fails with 401. However, clients will often run multiple\n        // requests in parallel which may result in multiple refresh calls.\n        // To avoid that, we keep a reference to the current refresh task (if any).\n        if (!this._refreshTask) {\n\n            const refreshRequestOptions = {\n                credentials: this.environment.options.refreshTokenWithCredentials || \"same-origin\",\n                ...requestOptions,\n                method : \"POST\",\n                mode   : \"cors\" as RequestMode,\n                headers: {\n                    ...(requestOptions.headers || {}),\n                    \"content-type\": \"application/x-www-form-urlencoded\"\n                },\n                body: `grant_type=refresh_token&refresh_token=${encodeURIComponent(refreshToken)}`\n            };\n\n            // custom authorization header can be passed on manual calls\n            if (!(\"authorization\" in refreshRequestOptions.headers)) {\n                const { clientSecret, clientId } = this.state;\n                if (clientSecret) {\n                    // @ts-ignore\n                    refreshRequestOptions.headers.authorization = \"Basic \" + this.environment.btoa(\n                        clientId + \":\" + clientSecret\n                    );\n                }\n            }\n\n            this._refreshTask = request<fhirclient.TokenResponse>(tokenUri, refreshRequestOptions)\n            .then(data => {\n                assert(data.access_token, \"No access token received\");\n                debugRefresh(\"Received new access token response %O\", data);\n                Object.assign(this.state.tokenResponse, data);\n                this.state.expiresAt = getAccessTokenExpiration(data, this.environment);\n                return this.state;\n            })\n            .catch((error: Error) => {\n                if (this.state?.tokenResponse?.refresh_token) {\n                    debugRefresh(\"Deleting the expired or invalid refresh token.\");\n                    delete this.state.tokenResponse.refresh_token;\n                }\n                throw error;\n            })\n            .finally(() => {\n                this._refreshTask = null;\n                const key = this.state.key;\n                if (key) {\n                    this.environment.getStorage().set(key, this.state);\n                } else {\n                    debugRefresh(\"No 'key' found in Clint.state. Cannot persist the instance.\");\n                }\n            });\n        }\n\n        return this._refreshTask;\n    }\n\n    // utils -------------------------------------------------------------------\n\n    /**\n     * Groups the observations by code. Returns a map that will look like:\n     * ```js\n     * const map = client.byCodes(observations, \"code\");\n     * // map = {\n     * //     \"55284-4\": [ observation1, observation2 ],\n     * //     \"6082-2\": [ observation3 ]\n     * // }\n     * ```\n     * @param observations Array of observations\n     * @param property The name of a CodeableConcept property to group by\n     * @todo This should be deprecated and moved elsewhere. One should not have\n     * to obtain an instance of [[Client]] just to use utility functions like this.\n     * @deprecated\n     * @category Utility\n     */\n    byCode(\n        observations: fhirclient.FHIR.Observation | fhirclient.FHIR.Observation[],\n        property: string\n    ): fhirclient.ObservationMap\n    {\n        return byCode(observations, property);\n    }\n\n    /**\n     * First groups the observations by code using `byCode`. Then returns a function\n     * that accepts codes as arguments and will return a flat array of observations\n     * having that codes. Example:\n     * ```js\n     * const filter = client.byCodes(observations, \"category\");\n     * filter(\"laboratory\") // => [ observation1, observation2 ]\n     * filter(\"vital-signs\") // => [ observation3 ]\n     * filter(\"laboratory\", \"vital-signs\") // => [ observation1, observation2, observation3 ]\n     * ```\n     * @param observations Array of observations\n     * @param property The name of a CodeableConcept property to group by\n     * @todo This should be deprecated and moved elsewhere. One should not have\n     * to obtain an instance of [[Client]] just to use utility functions like this.\n     * @deprecated\n     * @category Utility\n     */\n    byCodes(\n        observations: fhirclient.FHIR.Observation | fhirclient.FHIR.Observation[],\n        property: string\n    ): (...codes: string[]) => any[]\n    {\n        return byCodes(observations, property);\n    }\n\n    /**\n     * @category Utility\n     */\n    units = units;\n\n    /**\n     * Walks through an object (or array) and returns the value found at the\n     * provided path. This function is very simple so it intentionally does not\n     * support any argument polymorphism, meaning that the path can only be a\n     * dot-separated string. If the path is invalid returns undefined.\n     * @param obj The object (or Array) to walk through\n     * @param path The path (eg. \"a.b.4.c\")\n     * @returns {*} Whatever is found in the path or undefined\n     * @todo This should be deprecated and moved elsewhere. One should not have\n     * to obtain an instance of [[Client]] just to use utility functions like this.\n     * @deprecated\n     * @category Utility\n     */\n    getPath(obj: Record<string, any>, path = \"\"): any {\n        return getPath(obj, path);\n    }\n\n    /**\n     * Returns a copy of the client state. Accepts a dot-separated path argument\n     * (same as for `getPath`) to allow for selecting specific properties.\n     * Examples:\n     * ```js\n     * client.getState(); // -> the entire state object\n     * client.getState(\"serverUrl\"); // -> the URL we are connected to\n     * client.getState(\"tokenResponse.patient\"); // -> The selected patient ID (if any)\n     * ```\n     * @param path The path (eg. \"a.b.4.c\")\n     * @returns {*} Whatever is found in the path or undefined\n     */\n    getState(path = \"\") {\n        return getPath({ ...this.state }, path);\n    }\n\n    /**\n     * Returns a promise that will be resolved with the fhir version as defined\n     * in the CapabilityStatement.\n     */\n    getFhirVersion(): Promise<string> {\n        return fetchConformanceStatement(this.state.serverUrl)\n            .then((metadata) => metadata.fhirVersion);\n    }\n\n    /**\n     * Returns a promise that will be resolved with the numeric fhir version\n     * - 2 for DSTU2\n     * - 3 for STU3\n     * - 4 for R4\n     * - 0 if the version is not known\n     */\n    getFhirRelease(): Promise<number> {\n        return this.getFhirVersion().then(v => (fhirVersions as any)[v] ?? 0);\n    }\n}\n","import { fhirclient } from \"./types\";\n\n\nexport default class HttpError extends Error\n{\n    /**\n     * The HTTP status code for this error\n     */\n    statusCode: number;\n\n    /**\n     * The HTTP status code for this error.\n     * Note that this is the same as `status`, i.e. the code is available\n     * through any of these.\n     */\n    status: number;\n\n    /**\n     * The HTTP status text corresponding to this error\n     */\n    statusText: string;\n\n    /**\n     * Reference to the HTTP Response object\n     */\n    response: Response;\n\n    constructor(response: Response) {\n        super(`${response.status} ${response.statusText}\\nURL: ${response.url}`);\n        this.name       = \"HttpError\";\n        this.response   = response;\n        this.statusCode = response.status;\n        this.status     = response.status;\n        this.statusText = response.statusText;\n    }\n\n    async parse()\n    {\n        if (!this.response.bodyUsed) {\n            try {\n                const type = this.response.headers.get(\"Content-Type\") || \"text/plain\";\n                if (type.match(/\\bjson\\b/i)) {\n                    let body = await this.response.json();\n                    if (body.error) {\n                        this.message += \"\\n\" + body.error;\n                        if (body.error_description) {\n                            this.message += \": \" + body.error_description;\n                        }\n                    }\n                    else {\n                        this.message += \"\\n\\n\" + JSON.stringify(body, null, 4);\n                    }\n                }\n                else if (type.match(/^text\\//i)) {\n                    let body = await this.response.text();\n                    if (body) {\n                        this.message += \"\\n\\n\" + body;\n                    }\n                }\n            } catch {\n                // ignore\n            }\n        }\n\n        return this;\n    }\n\n    toJSON() {\n        return {\n            name      : this.name,\n            statusCode: this.statusCode,\n            status    : this.status,\n            statusText: this.statusText,\n            message   : this.message\n        };\n    }\n}\n","import { ready, authorize, init } from \"../smart\";\nimport Client from \"../Client\";\nimport BrowserStorage from \"../storage/BrowserStorage\";\nimport { fhirclient } from \"../types\";\n\n/**\n * Browser Adapter\n */\nexport default class BrowserAdapter implements fhirclient.Adapter\n{\n    /**\n     * Stores the URL instance associated with this adapter\n     */\n    private _url: URL | null = null;\n\n    /**\n     * Holds the Storage instance associated with this instance\n     */\n    private _storage: fhirclient.Storage | null = null;\n\n    /**\n     * Environment-specific options\n     */\n    options: fhirclient.BrowserFHIRSettings;\n\n    /**\n     * @param options Environment-specific options\n     */\n    constructor(options: fhirclient.BrowserFHIRSettings = {})\n    {\n        this.options = {\n            // Replaces the browser's current URL\n            // using window.history.replaceState API or by reloading.\n            replaceBrowserHistory: true,\n\n            // When set to true, this variable will fully utilize\n            // HTML5 sessionStorage API.\n            // This variable can be overridden to false by setting\n            // FHIR.oauth2.settings.fullSessionStorageSupport = false.\n            // When set to false, the sessionStorage will be keyed\n            // by a state variable. This is to allow the embedded IE browser\n            // instances instantiated on a single thread to continue to\n            // function without having sessionStorage data shared\n            // across the embedded IE instances.\n            fullSessionStorageSupport: true,\n\n            // Do we want to send cookies while making a request to the token\n            // endpoint in order to obtain new access token using existing\n            // refresh token. In rare cases the auth server might require the\n            // client to send cookies along with those requests. In this case\n            // developers will have to change this before initializing the app\n            // like so:\n            // `FHIR.oauth2.settings.refreshTokenWithCredentials = \"include\";`\n            // or\n            // `FHIR.oauth2.settings.refreshTokenWithCredentials = \"same-origin\";`\n            // Can be one of:\n            // \"include\"     - always send cookies\n            // \"same-origin\" - only send cookies if we are on the same domain (default)\n            // \"omit\"        - do not send cookies\n            refreshTokenWithCredentials: \"same-origin\",\n\n            ...options\n        };\n    }\n\n    /**\n     * Given a relative path, returns an absolute url using the instance base URL\n     */\n    relative(path: string): string\n    {\n        return new URL(path, this.getUrl().href).href;\n    }\n\n    /**\n     * In browsers we need to be able to (dynamically) check if fhir.js is\n     * included in the page. If it is, it should have created a \"fhir\" variable\n     * in the global scope.\n     */\n    get fhir()\n    {\n        // @ts-ignore\n        return typeof fhir === \"function\" ? fhir : null;\n    }\n\n    /**\n     * Given the current environment, this method must return the current url\n     * as URL instance\n     */\n    getUrl(): URL\n    {\n        if (!this._url) {\n            this._url = new URL(location + \"\");\n        }\n        return this._url;\n    }\n\n    /**\n     * Given the current environment, this method must redirect to the given\n     * path\n     */\n    redirect(to: string): void\n    {\n        location.href = to;\n    }\n\n    /**\n     * Returns a BrowserStorage object which is just a wrapper around\n     * sessionStorage\n     */\n    getStorage(): BrowserStorage\n    {\n        if (!this._storage) {\n            this._storage = new BrowserStorage();\n        }\n        return this._storage;\n    }\n\n    /**\n     * Returns a reference to the AbortController constructor. In browsers,\n     * AbortController will always be available as global (native or polyfilled)\n     */\n    getAbortController()\n    {\n        return AbortController;\n    }\n\n    /**\n     * ASCII string to Base64\n     */\n    atob(str: string): string\n    {\n        return window.atob(str);\n    }\n\n    /**\n     * Base64 to ASCII string\n     */\n    btoa(str: string): string\n    {\n        return window.btoa(str);\n    }\n\n    /**\n     * Creates and returns adapter-aware SMART api. Not that while the shape of\n     * the returned object is well known, the arguments to this function are not.\n     * Those who override this method are free to require any environment-specific\n     * arguments. For example in node we will need a request, a response and\n     * optionally a storage or storage factory function.\n     */\n    getSmartApi(): fhirclient.SMART\n    {\n        return {\n            ready    : (...args: any[]) => ready(this, ...args),\n            authorize: options => authorize(this, options),\n            init     : options => init(this, options),\n            client   : (state: string | fhirclient.ClientState) => new Client(this, state),\n            options  : this.options\n        };\n    }\n}\n","\n// Note: the following 2 imports appear as unused but they affect how tsc is\n// generating type definitions!\nimport { fhirclient } from \"../types\";\nimport Client from \"../Client\";\n\n// In Browsers we create an adapter, get the SMART api from it and build the\n// global FHIR object\nimport BrowserAdapter from \"../adapters/BrowserAdapter\";\n\nconst adapter = new BrowserAdapter();\nconst { ready, authorize, init, client, options } = adapter.getSmartApi();\n\n// We have two kinds of browser builds - \"pure\" for new browsers and \"legacy\"\n// for old ones. In pure builds we assume that the browser supports everything\n// we need. In legacy mode, the library also acts as a polyfill. Babel will\n// automatically polyfill everything except \"fetch\", which we have to handle\n// manually.\n// @ts-ignore\nif (typeof FHIRCLIENT_PURE == \"undefined\") {\n    const fetch = require(\"cross-fetch\");\n    require(\"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\");\n    if (!window.fetch) {\n        window.fetch    = fetch.default;\n        window.Headers  = fetch.Headers;\n        window.Request  = fetch.Request;\n        window.Response = fetch.Response;\n    }\n}\n\n// $lab:coverage:off$\nconst FHIR = {\n    AbortController: window.AbortController,\n    client,\n    oauth2: {\n        settings: options,\n        ready,\n        authorize,\n        init\n    }\n};\n\nexport = FHIR;\n// $lab:coverage:on$\n","/*\n * This file contains some shared functions. They are used by other modules, but\n * are defined here so that tests can import this library and test them.\n */\n\nimport HttpError from \"./HttpError\";\nimport { patientParams } from \"./settings\";\nimport { fhirclient } from \"./types\";\nconst debug = require(\"debug\");\n\n// $lab:coverage:off$\n// @ts-ignore\nconst { fetch } = typeof FHIRCLIENT_PURE !== \"undefined\" ? window : require(\"cross-fetch\");\n// $lab:coverage:on$\n\nconst _debug     = debug(\"FHIR\");\nexport { _debug as debug };\n\n/**\n * The cache for the `getAndCache` function\n */\nconst cache: Record<string, any> = {};\n\n/**\n * A namespace with functions for converting between different measurement units\n */\nexport const units = {\n    cm({ code, value }: fhirclient.CodeValue) {\n        ensureNumerical({ code, value });\n        if (code == \"cm\"     ) return value;\n        if (code == \"m\"      ) return value *   100;\n        if (code == \"in\"     ) return value *  2.54;\n        if (code == \"[in_us]\") return value *  2.54;\n        if (code == \"[in_i]\" ) return value *  2.54;\n        if (code == \"ft\"     ) return value * 30.48;\n        if (code == \"[ft_us]\") return value * 30.48;\n        throw new Error(\"Unrecognized length unit: \" + code);\n    },\n    kg({ code, value }: fhirclient.CodeValue){\n        ensureNumerical({ code, value });\n        if (code == \"kg\"    ) return value;\n        if (code == \"g\"     ) return value / 1000;\n        if (code.match(/lb/)) return value / 2.20462;\n        if (code.match(/oz/)) return value / 35.274;\n        throw new Error(\"Unrecognized weight unit: \" + code);\n    },\n    any(pq: fhirclient.CodeValue){\n        ensureNumerical(pq);\n        return pq.value;\n    }\n};\n\n/**\n * Assertion function to guard arguments for `units` functions\n */\nfunction ensureNumerical({ value, code }: fhirclient.CodeValue) {\n    if (typeof value !== \"number\") {\n        throw new Error(\"Found a non-numerical unit: \" + value + \" \" + code);\n    }\n}\n\n/**\n * Used in fetch Promise chains to reject if the \"ok\" property is not true\n */\nexport async function checkResponse(resp: Response): Promise<Response> {\n    if (!resp.ok) {\n        const error = new HttpError(resp);\n        await error.parse();\n        throw error;\n    }\n    return resp;\n}\n\n/**\n * Used in fetch Promise chains to return the JSON version of the response.\n * Note that `resp.json()` will throw on empty body so we use resp.text()\n * instead.\n */\nexport function responseToJSON(resp: Response): Promise<object|string> {\n    return resp.text().then(text => text.length ? JSON.parse(text) : \"\");\n}\n\n/**\n * This is our built-in request function. It does a few things by default\n * (unless told otherwise):\n * - Makes CORS requests\n * - Sets accept header to \"application/json\"\n * - Handles errors\n * - If the response is json return the json object\n * - If the response is text return the result text\n * - Otherwise return the response object on which we call stuff like `.blob()`\n */\nexport function request<T = fhirclient.FetchResult>(\n    url: string | Request,\n    requestOptions: fhirclient.FetchOptions = {}\n): Promise<T>\n{\n    const { includeResponse, ...options } = requestOptions;\n    return fetch(url, {\n        mode: \"cors\",\n        ...options,\n        headers: {\n            accept: \"application/json\",\n            ...options.headers\n        }\n    })\n    .then(checkResponse)\n    .then((res: Response) => {\n        const type = res.headers.get(\"Content-Type\") + \"\";\n        if (type.match(/\\bjson\\b/i)) {\n            return responseToJSON(res).then(body => ({ res, body }));\n        }\n        if (type.match(/^text\\//i)) {\n            return res.text().then(body => ({ res, body }));\n        }\n        return { res };\n    })\n    .then(({res, body}: {res:Response, body?:fhirclient.JsonObject|string}) => {\n\n        // Some servers will reply after CREATE with json content type but with\n        // empty body. In this case check if a location header is received and\n        // fetch that to use it as the final result.\n        if (!body && res.status == 201) {\n            const location = res.headers.get(\"location\");\n            if (location) {\n                return request(location, { ...options, method: \"GET\", body: null, includeResponse });\n            }\n        }\n\n        if (includeResponse) {\n            return { body, response: res };\n        }\n\n        // For any non-text and non-json response return the Response object.\n        // This to let users decide if they want to call text(), blob() or\n        // something else on it\n        if (body === undefined) {\n            return res;\n        }\n\n        // Otherwise just return the parsed body (can also be \"\" or null)\n        return body;\n    });\n}\n\n/**\n * Makes a request using `fetch` and stores the result in internal memory cache.\n * The cache is cleared when the page is unloaded.\n * @param url The URL to request\n * @param requestOptions Request options\n * @param force If true, reload from source and update the cache, even if it has\n * already been cached.\n */\nexport function getAndCache(url: string, requestOptions?: RequestInit, force: boolean = process.env.NODE_ENV === \"test\"): Promise<any> {\n    if (force || !cache[url]) {\n        cache[url] = request(url, requestOptions);\n        return cache[url];\n    }\n    return Promise.resolve(cache[url]);\n}\n\n/**\n * Fetches the conformance statement from the given base URL.\n * Note that the result is cached in memory (until the page is reloaded in the\n * browser) because it might have to be re-used by the client\n * @param baseUrl The base URL of the FHIR server\n * @param [requestOptions] Any options passed to the fetch call\n */\nexport function fetchConformanceStatement(baseUrl = \"/\", requestOptions?: RequestInit): Promise<fhirclient.FHIR.CapabilityStatement>\n{\n    const url = String(baseUrl).replace(/\\/*$/, \"/\") + \"metadata\";\n    return getAndCache(url, requestOptions).catch((ex: Error) => {\n        throw new Error(\n            `Failed to fetch the conformance statement from \"${url}\". ${ex}`\n        );\n    });\n}\n\n\n/**\n * Walks through an object (or array) and returns the value found at the\n * provided path. This function is very simple so it intentionally does not\n * support any argument polymorphism, meaning that the path can only be a\n * dot-separated string. If the path is invalid returns undefined.\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @returns {*} Whatever is found in the path or undefined\n */\nexport function getPath(obj: Record<string, any>, path = \"\"): any {\n    path = path.trim();\n    if (!path) {\n        return obj;\n    }\n\n    let segments = path.split(\".\");\n    let result = obj;\n\n    while (result && segments.length) {\n        const key = segments.shift();\n        if (!key && Array.isArray(result)) {\n            return result.map(o => getPath(o, segments.join(\".\")));\n        } else {\n            result = result[key as string];\n        }\n    }\n\n    return result;\n}\n\n/**\n * Like getPath, but if the node is found, its value is set to @value\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @param value The value to set\n * @param createEmpty If true, create missing intermediate objects or arrays\n * @returns The modified object\n */\nexport function setPath(obj: Record<string, any>, path: string, value: any, createEmpty = false): Record<string, any> {\n    path.trim().split(\".\").reduce(\n        (out, key, idx, arr) => {\n            if (out && idx === arr.length - 1) {\n                out[key] = value;\n            }\n            else {\n                if (out && out[key] === undefined && createEmpty) {\n                    out[key] = arr[idx + 1].match(/^[0-9]+$/) ? [] : {};\n                }\n                return out ? out[key] : undefined;\n            }\n        },\n        obj\n    );\n    return obj;\n}\n\n/**\n * If the argument is an array returns it as is. Otherwise puts it in an array\n * (`[arg]`) and returns the result\n * @param arg The element to test and possibly convert to array\n * @category Utility\n */\nexport function makeArray<T = any>(arg: any): T[] {\n    if (Array.isArray(arg)) {\n        return arg;\n    }\n    return [arg];\n}\n\n/**\n * Given a path, converts it to absolute url based on the `baseUrl`. If baseUrl\n * is not provided, the result would be a rooted path (one that starts with `/`).\n * @param path The path to convert\n * @param baseUrl The base URL\n */\nexport function absolute(path: string, baseUrl?: string): string\n{\n    if (path.match(/^http/)) return path;\n    if (path.match(/^urn/)) return path;\n    return String(baseUrl || \"\").replace(/\\/+$/, \"\") + \"/\" + path.replace(/^\\/+/, \"\");\n}\n\n/**\n * Generates random strings. By default this returns random 8 characters long\n * alphanumeric strings.\n * @param strLength The length of the output string. Defaults to 8.\n * @param charSet A string containing all the possible characters.\n *     Defaults to all the upper and lower-case letters plus digits.\n * @category Utility\n */\nexport function randomString(\n    strLength = 8,\n    charSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n): string\n{\n    const result = [];\n    const len = charSet.length;\n    while (strLength--) {\n        result.push(charSet.charAt(Math.floor(Math.random() * len)));\n    }\n    return result.join(\"\");\n}\n\n/**\n * Decodes a JWT token and returns it's body.\n * @param token The token to read\n * @param env An `Adapter` or any other object that has an `atob` method\n * @category Utility\n */\nexport function jwtDecode(token: string, env: fhirclient.Adapter): Record<string, any> | null\n{\n    const payload = token.split(\".\")[1];\n    return payload ? JSON.parse(env.atob(payload)) : null;\n}\n\n/**\n * Add a supplied number of seconds to the supplied Date, returning\n * an integer number of seconds since the epoch\n * @param secondsAhead How far ahead, in seconds (defaults to 120 seconds)\n * @param fromDate Initial time (defaults to current time)\n */\nexport function getTimeInFuture(secondsAhead: number = 120, from = new Date()): number {\n    return Math.floor(from.getTime() / 1000 + secondsAhead) \n}\n\n/**\n * Given a token response, computes and returns the expiresAt timestamp.\n * Note that this should only be used immediately after an access token is\n * received, otherwise the computed timestamp will be incorrect.\n * @param tokenResponse \n * @param env \n */\nexport function getAccessTokenExpiration(tokenResponse: fhirclient.TokenResponse, env: fhirclient.Adapter): number\n{\n    const now = Math.floor(Date.now() / 1000);\n\n    // Option 1 - using the expires_in property of the token response\n    if (tokenResponse.expires_in) {\n        return now + tokenResponse.expires_in;\n    }\n\n    // Option 2 - using the exp property of JWT tokens (must not assume JWT!)\n    if (tokenResponse.access_token) {\n        let tokenBody = jwtDecode(tokenResponse.access_token, env);\n        if (tokenBody && tokenBody.exp) {\n            return tokenBody.exp;\n        }\n    }\n\n    // Option 3 - if none of the above worked set this to 5 minutes after now\n    return now + 300;\n}\n\n/**\n * Groups the observations by code. Returns a map that will look like:\n * ```js\n * const map = client.byCodes(observations, \"code\");\n * // map = {\n * //     \"55284-4\": [ observation1, observation2 ],\n * //     \"6082-2\": [ observation3 ]\n * // }\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\nexport function byCode(\n    observations: fhirclient.FHIR.Observation | fhirclient.FHIR.Observation[],\n    property: string\n): fhirclient.ObservationMap\n{\n    const ret: fhirclient.ObservationMap = {};\n\n    function handleCodeableConcept(concept: fhirclient.FHIR.CodeableConcept, observation: fhirclient.FHIR.Observation) {\n        if (concept && Array.isArray(concept.coding)) {\n            concept.coding.forEach(({ code }) => {\n                if (code) {\n                    ret[code] = ret[code] || [] as fhirclient.FHIR.Observation[];\n                    ret[code].push(observation);\n                }\n            });\n        }\n    }\n\n    makeArray(observations).forEach(o => {\n        if (o.resourceType === \"Observation\" && o[property]) {\n            if (Array.isArray(o[property])) {\n                o[property].forEach((concept: fhirclient.FHIR.CodeableConcept) => handleCodeableConcept(concept, o));\n            } else {\n                handleCodeableConcept(o[property], o);\n            }\n        }\n    });\n\n    return ret;\n}\n\n/**\n * First groups the observations by code using `byCode`. Then returns a function\n * that accepts codes as arguments and will return a flat array of observations\n * having that codes. Example:\n * ```js\n * const filter = client.byCodes(observations, \"category\");\n * filter(\"laboratory\") // => [ observation1, observation2 ]\n * filter(\"vital-signs\") // => [ observation3 ]\n * filter(\"laboratory\", \"vital-signs\") // => [ observation1, observation2, observation3 ]\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\nexport function byCodes(\n    observations: fhirclient.FHIR.Observation | fhirclient.FHIR.Observation[],\n    property: string\n): (...codes: string[]) => any[]\n{\n    const bank = byCode(observations, property);\n    return (...codes) => codes\n        .filter(code => (code + \"\") in bank)\n        .reduce(\n            (prev, code) => prev.concat(bank[code + \"\"]),\n            [] as fhirclient.FHIR.Observation[]\n        );\n}\n\n/**\n * Given a conformance statement and a resource type, returns the name of the\n * URL parameter that can be used to scope the resource type by patient ID.\n */\nexport function getPatientParam(conformance: fhirclient.FHIR.CapabilityStatement, resourceType: string): string\n{\n    // Find what resources are supported by this server\n    const resources = getPath(conformance, \"rest.0.resource\") || [];\n\n    // Check if this resource is supported\n    const meta = resources.find((r: any) => r.type === resourceType);\n    if (!meta) {\n        throw new Error(`Resource \"${resourceType}\" is not supported by this FHIR server`);\n    }\n\n    // Check if any search parameters are available for this resource\n    if (!Array.isArray(meta.searchParam)) {\n        throw new Error(`No search parameters supported for \"${resourceType}\" on this FHIR server`);\n    }\n\n    // This is a rare case but could happen in generic workflows\n    if (resourceType == \"Patient\" && meta.searchParam.find((x: any) => x.name == \"_id\")) {\n        return \"_id\";\n    }\n\n    // Now find the first possible parameter name\n    const out = patientParams.find(p => meta.searchParam.find((x: any) => x.name == p));\n\n    // If there is no match\n    if (!out) {\n        throw new Error(\"I don't know what param to use for \" + resourceType);\n    }\n\n    return out;\n}\n\n/**\n * Resolves a reference to target window. It may also open new window or tab if\n * the `target = \"popup\"` or `target = \"_blank\"`.\n * @param target\n * @param width Only used when `target = \"popup\"`\n * @param height Only used when `target = \"popup\"`\n */\nexport async function getTargetWindow(target: fhirclient.WindowTarget, width: number = 800, height: number = 720): Promise<Window>\n{\n    // The target can be a function that returns the target. This can be\n    // used to open a layer pop-up with an iframe and then return a reference\n    // to that iframe (or its name)\n    if (typeof target == \"function\") {\n        target = await target();\n    }\n\n    // The target can be a window reference\n    if (target && typeof target == \"object\") {\n        return target;\n    }\n\n    // At this point target must be a string\n    if (typeof target != \"string\") {\n        _debug(\"Invalid target type '%s'. Failing back to '_self'.\", typeof target);\n        return self;\n    }\n\n    // Current window\n    if (target == \"_self\") {\n        return self;\n    }\n\n    // The parent frame\n    if (target == \"_parent\") {\n        return parent;\n    }\n\n    // The top window\n    if (target == \"_top\") {\n        return top;\n    }\n\n    // New tab or window\n    if (target == \"_blank\") {\n        let error, targetWindow: Window | null = null;\n        try {\n            targetWindow = window.open(\"\", \"SMARTAuthPopup\");\n            if (!targetWindow) {\n                throw new Error(\"Perhaps window.open was blocked\");\n            }\n        } catch (e) {\n            error = e;\n        }\n\n        if (!targetWindow) {\n            _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n            return self;\n        } else {\n            return targetWindow;\n        }\n    }\n\n    // Popup window\n    if (target == \"popup\") {\n        let error, targetWindow: Window | null = null;\n        // if (!targetWindow || targetWindow.closed) {\n        try {\n            targetWindow = window.open(\"\", \"SMARTAuthPopup\", [\n                \"height=\" + height,\n                \"width=\" + width,\n                \"menubar=0\",\n                \"resizable=1\",\n                \"status=0\",\n                \"top=\" + (screen.height - height) / 2,\n                \"left=\" + (screen.width - width) / 2\n            ].join(\",\"));\n            if (!targetWindow) {\n                throw new Error(\"Perhaps the popup window was blocked\");\n            }\n        } catch (e) {\n            error = e;\n        }\n\n        if (!targetWindow) {\n            _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n            return self;\n        } else {\n            return targetWindow;\n        }\n    }\n\n    // Frame or window by name\n    const winOrFrame: Window = frames[target as any];\n    if (winOrFrame) {\n        return winOrFrame;\n    }\n\n    _debug(\"Unknown target '%s'. Failing back to '_self'.\", target);\n    return self;\n}\n\nexport function assert(condition: any, message: string): asserts condition {\n    if (!(condition)) {\n        throw new Error(message)\n    }\n}\n\nexport function assertJsonPatch(patch: fhirclient.JsonPatch): asserts patch {\n    assert(Array.isArray(patch), \"The JSON patch must be an array\")\n    assert(patch.length > 0, \"The JSON patch array should not be empty\")\n    patch.forEach((operation: fhirclient.JsonPatchOperation) => {\n        assert(\n            [\"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"].indexOf(operation.op) > -1,\n            'Each patch operation must have an \"op\" property which must be one of: \"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"'\n        )\n        assert(operation.path && typeof operation.path, `Invalid \"${operation.op}\" operation. Missing \"path\" property`)\n        \n        if (operation.op == \"add\" || operation.op == \"replace\" || operation.op == \"test\") {\n            assert(\"value\" in operation, `Invalid \"${operation.op}\" operation. Missing \"value\" property`)\n            assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`)\n        }\n\n        else if (operation.op == \"move\" || operation.op == \"copy\") {\n            assert(typeof operation.from == \"string\", `Invalid \"${operation.op}\" operation. Requires a string \"from\" property`)\n            assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`)\n        }\n\n        else {\n            assert(Object.keys(operation).length == 2, `Invalid \"${operation.op}\" operation. Contains unknown properties`)\n        }\n    })\n}\n","import * as jose from \"jose\";\n\nconst base64urlencode: (input: Uint8Array | string)=> string = jose.base64url.encode;\nconst base64urldecode: (input: Uint8Array | string)=> Uint8Array= jose.base64url.decode;\n\nexport {\n  base64urldecode, base64urlencode\n}\n\n\ndeclare var IS_BROWSER: boolean;\nlet wcrypto: SubtleCrypto;\nlet cryptoRandomBytes: (count: number) => Uint8Array;\n\nif (typeof IS_BROWSER == 'undefined' && (typeof window === 'undefined' || !window?.crypto?.subtle)) {\n  wcrypto =  require('crypto').webcrypto.subtle\n  cryptoRandomBytes = require('crypto').randomBytes\n} else {\n  wcrypto = window.crypto.subtle\n}\n\nexport const digestSha256 = async (payload: string | ArrayBuffer) => {\n  let prepared: ArrayBuffer;\n\n  if (typeof payload === 'string') {\n    const encoder = new TextEncoder();\n    prepared = encoder.encode(payload).buffer;\n  } else {\n      prepared = payload\n  }\n\n  const hash = await wcrypto.digest('SHA-256', prepared);\n  return new Uint8Array(hash);\n}\n\nexport const randomBytes = (count: number): Uint8Array => {\n  if (typeof window !== 'undefined' && window?.crypto?.getRandomValues) {\n    return window.crypto.getRandomValues(new Uint8Array(count));\n  } else {\n    return cryptoRandomBytes(count);\n  }\n}\n\nconst RECOMMENDED_CODE_VERIFIER_ENTROPY = 96;\nexport const generatePKCEChallenge = async (entropy = RECOMMENDED_CODE_VERIFIER_ENTROPY):Promise<{codeChallenge: string, codeVerifier: string}> =>  {\n  const inputBytes = randomBytes(entropy);\n  const codeVerifier = base64urlencode(inputBytes);\n  const codeChallenge = base64urlencode(await digestSha256(codeVerifier));\n  return {codeChallenge, codeVerifier}\n}\n\ntype SupportedAlg = 'ES384' | 'RS384'\nconst generateKey = async (jwsAlg: SupportedAlg): Promise<jose.GenerateKeyPairResult> => jose.generateKeyPair(jwsAlg, {extractable: true})\n\nexport const importKey = async (jwk: {alg: SupportedAlg}): Promise<jose.KeyLike> => jose.importJWK(jwk) as Promise<jose.KeyLike>\n\nexport const signCompactJws = async (alg: SupportedAlg, privateKey: jose.KeyLike, header: any, payload: any): Promise<string> => {\n  return new jose.SignJWT(payload).setProtectedHeader({...header, alg}).sign(privateKey)\n}\n\n\nasync function test(){\n    const esk = await generateKey('ES384');\n    console.log(\"Signed ES384\", esk.privateKey);\n    const eskSigned = await new jose.SignJWT({\n      iss: \"issuer\"\n    }).setProtectedHeader({alg: 'ES384', jwku: \"test\"})\n    .sign(esk.privateKey);\n    console.log(\"Signed ES384\", eskSigned);\n    console.log(JSON.stringify(await jose.exportJWK(esk.publicKey)))\n\n    const rsk = await generateKey('RS384');\n    const rskSigned = await new jose.SignJWT({\n      iss: \"issuer\"\n    }).setProtectedHeader({alg: 'RS384', jwku: \"test\"})\n    .sign(rsk.privateKey);\n    console.log(\"Signed RS384\", rskSigned);\n    console.log(JSON.stringify(await jose.exportJWK(rsk.publicKey)))\n\n}","/**\n * Combined list of FHIR resource types accepting patient parameter in FHIR R2-R4\n */\nexport const patientCompartment = [\n    \"Account\",\n    \"AdverseEvent\",\n    \"AllergyIntolerance\",\n    \"Appointment\",\n    \"AppointmentResponse\",\n    \"AuditEvent\",\n    \"Basic\",\n    \"BodySite\",\n    \"BodyStructure\",\n    \"CarePlan\",\n    \"CareTeam\",\n    \"ChargeItem\",\n    \"Claim\",\n    \"ClaimResponse\",\n    \"ClinicalImpression\",\n    \"Communication\",\n    \"CommunicationRequest\",\n    \"Composition\",\n    \"Condition\",\n    \"Consent\",\n    \"Coverage\",\n    \"CoverageEligibilityRequest\",\n    \"CoverageEligibilityResponse\",\n    \"DetectedIssue\",\n    \"DeviceRequest\",\n    \"DeviceUseRequest\",\n    \"DeviceUseStatement\",\n    \"DiagnosticOrder\",\n    \"DiagnosticReport\",\n    \"DocumentManifest\",\n    \"DocumentReference\",\n    \"EligibilityRequest\",\n    \"Encounter\",\n    \"EnrollmentRequest\",\n    \"EpisodeOfCare\",\n    \"ExplanationOfBenefit\",\n    \"FamilyMemberHistory\",\n    \"Flag\",\n    \"Goal\",\n    \"Group\",\n    \"ImagingManifest\",\n    \"ImagingObjectSelection\",\n    \"ImagingStudy\",\n    \"Immunization\",\n    \"ImmunizationEvaluation\",\n    \"ImmunizationRecommendation\",\n    \"Invoice\",\n    \"List\",\n    \"MeasureReport\",\n    \"Media\",\n    \"MedicationAdministration\",\n    \"MedicationDispense\",\n    \"MedicationOrder\",\n    \"MedicationRequest\",\n    \"MedicationStatement\",\n    \"MolecularSequence\",\n    \"NutritionOrder\",\n    \"Observation\",\n    \"Order\",\n    \"Patient\",\n    \"Person\",\n    \"Procedure\",\n    \"ProcedureRequest\",\n    \"Provenance\",\n    \"QuestionnaireResponse\",\n    \"ReferralRequest\",\n    \"RelatedPerson\",\n    \"RequestGroup\",\n    \"ResearchSubject\",\n    \"RiskAssessment\",\n    \"Schedule\",\n    \"ServiceRequest\",\n    \"Specimen\",\n    \"SupplyDelivery\",\n    \"SupplyRequest\",\n    \"VisionPrescription\"\n];\n\n/**\n * Map of FHIR releases and their abstract version as number\n */\nexport const fhirVersions = {\n    \"0.4.0\": 2,\n    \"0.5.0\": 2,\n    \"1.0.0\": 2,\n    \"1.0.1\": 2,\n    \"1.0.2\": 2,\n    \"1.1.0\": 3,\n    \"1.4.0\": 3,\n    \"1.6.0\": 3,\n    \"1.8.0\": 3,\n    \"3.0.0\": 3,\n    \"3.0.1\": 3,\n    \"3.3.0\": 4,\n    \"3.5.0\": 4,\n    \"4.0.0\": 4,\n    \"4.0.1\": 4\n};\n\n/**\n * Combined (FHIR R2-R4) list of search parameters that can be used to scope\n * a request by patient ID.\n */\nexport const patientParams = [\n    \"patient\",\n    \"subject\",\n    \"requester\",\n    \"member\",\n    \"actor\",\n    \"beneficiary\"\n];\n\n/**\n * The name of the sessionStorage entry that contains the current key\n */\nexport const SMART_KEY = \"SMART_KEY\";\n","/* global window */\nimport {\n    debug as _debug,\n    request,\n    getPath,\n    getTimeInFuture,\n    randomString,\n    getAndCache,\n    fetchConformanceStatement,\n    getAccessTokenExpiration,\n    getTargetWindow,\n    assert\n} from \"./lib\";\nimport Client from \"./Client\";\nimport { SMART_KEY } from \"./settings\";\nimport { fhirclient } from \"./types\";\nimport * as security from \"./security/index\"\n\nconst debug = _debug.extend(\"oauth2\");\n\nexport { SMART_KEY as KEY };\n\nfunction isBrowser() {\n    return typeof window === \"object\";\n}\n\n/**\n * Fetches the well-known json file from the given base URL.\n * Note that the result is cached in memory (until the page is reloaded in the\n * browser) because it might have to be re-used by the client\n * @param baseUrl The base URL of the FHIR server\n */\nexport function fetchWellKnownJson(baseUrl = \"/\", requestOptions?: RequestInit): Promise<fhirclient.WellKnownSmartConfiguration>\n{\n    const url = String(baseUrl).replace(/\\/*$/, \"/\") + \".well-known/smart-configuration\";\n    return getAndCache(url, requestOptions).catch((ex: Error) => {\n        throw new Error(`Failed to fetch the well-known json \"${url}\". ${ex.message}`);\n    });\n}\n\n/**\n * Fetch a \"WellKnownJson\" and extract the SMART endpoints from it\n */\nfunction getSecurityExtensionsFromWellKnownJson(baseUrl = \"/\", requestOptions?: RequestInit): Promise<fhirclient.OAuthSecurityExtensions>\n{\n    return fetchWellKnownJson(baseUrl, requestOptions).then(meta => {\n        if (!meta.authorization_endpoint || !meta.token_endpoint) {\n            throw new Error(\"Invalid wellKnownJson\");\n        }\n        return {\n            registrationUri     : meta.registration_endpoint  || \"\",\n            authorizeUri        : meta.authorization_endpoint,\n            tokenUri            : meta.token_endpoint,\n            codeChallengeMethods: meta.code_challenge_methods_supported || []\n        };\n    });\n}\n\n/**\n * Fetch a `CapabilityStatement` and extract the SMART endpoints from it\n */\nfunction getSecurityExtensionsFromConformanceStatement(baseUrl = \"/\", requestOptions?: RequestInit): Promise<fhirclient.OAuthSecurityExtensions>\n{\n    return fetchConformanceStatement(baseUrl, requestOptions).then(meta => {\n        const nsUri = \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\";\n        const extensions = ((getPath(meta || {}, \"rest.0.security.extension\") || []) as Array<fhirclient.FHIR.Extension<\"valueUri\">>)\n            .filter(e => e.url === nsUri)\n            .map(o => o.extension)[0];\n\n        const out:fhirclient.OAuthSecurityExtensions = {\n            registrationUri     : \"\",\n            authorizeUri        : \"\",\n            tokenUri            : \"\",\n            codeChallengeMethods: [],\n        };\n\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (ext.url === \"register\") {\n                    out.registrationUri = ext.valueUri;\n                }\n                if (ext.url === \"authorize\") {\n                    out.authorizeUri = ext.valueUri;\n                }\n                if (ext.url === \"token\") {\n                    out.tokenUri = ext.valueUri;\n                }\n            });\n        }\n\n        return out;\n    });\n}\n\ninterface Task {\n    controller: AbortController;\n    promise: Promise<any>;\n    complete?: boolean;\n}\n\n/**\n * This works similarly to `Promise.any()`. The tasks are objects containing a\n * request promise and it's AbortController. Returns a promise that will be\n * resolved with the return value of the first successful request, or rejected\n * with an aggregate error if all tasks fail. Any requests, other than the first\n * one that succeeds will be aborted.\n */\nfunction any(tasks: Task[]): Promise<any> {\n    const len = tasks.length;\n    const errors: Error[] = [];\n    let resolved = false;\n\n    return new Promise((resolve, reject) => {\n\n        function onSuccess(task: Task, result: any) {\n            task.complete = true;\n            if (!resolved) {\n                resolved = true;\n                tasks.forEach(t => {\n                    if (!t.complete) {\n                       t.controller.abort();\n                    }\n                });\n                resolve(result);\n            }\n        }\n\n        function onError(error: Error) {\n            if (errors.push(error) === len) {\n                reject(new Error(errors.map(e => e.message).join(\"; \")));\n            }\n        }\n\n        tasks.forEach(t => {\n            t.promise.then(result => onSuccess(t, result), onError);\n        });\n    });\n}\n\n/**\n * The maximum length for a code verifier for the best security we can offer.\n * Please note the NOTE section of RFC 7636 § 4.1 - the length must be >= 43,\n * but <= 128, **after** base64 url encoding. Base64 expands from 'n' bytes\n * to 4(n/3) bytes (log2(64) = 6; 4*6 = 24 bits; pad to multiple of 4). With \n * a max length of 128, we get: 128/4 = 32; 32*3 = 96 bytes for a max input.\n */\n var RECOMMENDED_CODE_VERIFIER_LENGTH = 96;\n\n/**\n * Given a FHIR server, returns an object with it's Oauth security endpoints\n * that we are interested in. This will try to find the info in both the\n * `CapabilityStatement` and the `.well-known/smart-configuration`. Whatever\n * Arrives first will be used and the other request will be aborted.\n * @param [baseUrl] Fhir server base URL\n * @param [env] The Adapter\n */\nexport function getSecurityExtensions(env: fhirclient.Adapter, baseUrl = \"/\"): Promise<fhirclient.OAuthSecurityExtensions>\n{\n    console.log(\"Getting sec extension\", baseUrl)\n    return getSecurityExtensionsFromWellKnownJson(baseUrl)\n        .catch(e => getSecurityExtensionsFromConformanceStatement(baseUrl));\n}\n\n/**\n * Starts the SMART Launch Sequence.\n * > **IMPORTANT**:\n *   `authorize()` will end up redirecting you to the authorization server.\n *    This means that you should not add anything to the returned promise chain.\n *    Any code written directly after the authorize() call might not be executed\n *    due to that redirect!\n * @param env\n * @param [params]\n */\nexport async function authorize(\n    env: fhirclient.Adapter,\n    params: fhirclient.AuthorizeParams | fhirclient.AuthorizeParams[] = {}\n): Promise<string|void>\n{\n    const url = env.getUrl();\n\n    // Multiple config for EHR launches ---------------------------------------\n    if (Array.isArray(params)) {\n        const urlISS = url.searchParams.get(\"iss\") || url.searchParams.get(\"fhirServiceUrl\");\n        if (!urlISS) {\n            throw new Error(\n                'Passing in an \"iss\" url parameter is required if authorize ' +\n                'uses multiple configurations'\n            );\n        }\n        // pick the right config\n        const cfg = params.find(x => {\n            if (x.issMatch) {\n                if (typeof x.issMatch === \"function\") {\n                    return !!x.issMatch(urlISS);\n                }\n                if (typeof x.issMatch === \"string\") {\n                    return x.issMatch === urlISS;\n                }\n                if (x.issMatch instanceof RegExp) {\n                    return x.issMatch.test(urlISS);\n                }\n            }\n            return false;\n        });\n        assert(cfg, `No configuration found matching the current \"iss\" parameter \"${urlISS}\"`);\n        return await authorize(env, cfg);\n    }\n    // ------------------------------------------------------------------------\n\n    // Obtain input\n    const {\n        redirect_uri,\n        clientSecret,\n        clientPrivateJwk,\n        fakeTokenResponse,\n        patientId,\n        encounterId,\n        client_id,\n        target,\n        width,\n        height,\n        pkceMode,\n    } = params;\n\n    let {\n        iss,\n        launch,\n        fhirServiceUrl,\n        redirectUri,\n        noRedirect,\n        scope = \"\",\n        clientId,\n        completeInTarget\n    } = params;\n\n    const storage = env.getStorage();\n\n    // For these three an url param takes precedence over inline option\n    iss            = url.searchParams.get(\"iss\")            || iss;\n    fhirServiceUrl = url.searchParams.get(\"fhirServiceUrl\") || fhirServiceUrl;\n    launch         = url.searchParams.get(\"launch\")         || launch;\n\n    if (!clientId) {\n        clientId = client_id;\n    }\n\n    if (!redirectUri) {\n        redirectUri = redirect_uri;\n    }\n\n    if (!redirectUri) {\n        redirectUri = env.relative(\".\");\n    } else if (!redirectUri.match(/^https?\\:\\/\\//)) {\n        redirectUri = env.relative(redirectUri);\n    }\n\n    const serverUrl = String(iss || fhirServiceUrl || \"\");\n\n    // Validate input\n    if (!serverUrl) {\n        throw new Error(\n            \"No server url found. It must be specified as `iss` or as \" +\n            \"`fhirServiceUrl` parameter\"\n        );\n    }\n\n    if (iss) {\n        debug(\"Making %s launch...\", launch ? \"EHR\" : \"standalone\");\n    }\n\n    // append launch scope if needed\n    if (launch && !scope.match(/launch/)) {\n        scope += \" launch\";\n    }\n\n    if (isBrowser()) {\n        const inFrame = isInFrame();\n        const inPopUp = isInPopUp();\n\n        if ((inFrame || inPopUp) && completeInTarget !== true && completeInTarget !== false) {\n            \n            // completeInTarget will default to true if authorize is called from\n            // within an iframe. This is to avoid issues when the entire app\n            // happens to be rendered in an iframe (including in some EHRs),\n            // even though that was not how the app developer's intention.\n            completeInTarget = inFrame;\n\n            // In this case we can't always make the best decision so ask devs\n            // to be explicit in their configuration.\n            console.warn(\n                'Your app is being authorized from within an iframe or popup ' +\n                'window. Please be explicit and provide a \"completeInTarget\" ' +\n                'option. Use \"true\" to complete the authorization in the '     +\n                'same window, or \"false\" to try to complete it in the parent ' +\n                'or the opener window. See http://docs.smarthealthit.org/client-js/api.html'\n            );\n        }\n    }\n\n    // If `authorize` is called, make sure we clear any previous state (in case\n    // this is a re-authorize)\n    const oldKey = await storage.get(SMART_KEY);\n    await storage.unset(oldKey);\n\n    // create initial state\n    const stateKey = randomString(16);\n    const state: fhirclient.ClientState = {\n        clientId,\n        scope,\n        redirectUri,\n        serverUrl,\n        clientSecret,\n        clientPrivateJwk,\n        tokenResponse: {},\n        key: stateKey,\n        completeInTarget\n    };\n\n    const fullSessionStorageSupport = isBrowser() ?\n        getPath(env, \"options.fullSessionStorageSupport\") :\n        true;\n\n    if (fullSessionStorageSupport) {\n        await storage.set(SMART_KEY, stateKey);\n    }\n\n    // fakeTokenResponse to override stuff (useful in development)\n    if (fakeTokenResponse) {\n        Object.assign(state.tokenResponse, fakeTokenResponse);\n    }\n\n    // Fixed patientId (useful in development)\n    if (patientId) {\n        Object.assign(state.tokenResponse, { patient: patientId });\n    }\n\n    // Fixed encounterId (useful in development)\n    if (encounterId) {\n        Object.assign(state.tokenResponse, { encounter: encounterId });\n    }\n\n    let redirectUrl = redirectUri + \"?state=\" + encodeURIComponent(stateKey);\n\n    // bypass oauth if fhirServiceUrl is used (but iss takes precedence)\n    if (fhirServiceUrl && !iss) {\n        debug(\"Making fake launch...\");\n        await storage.set(stateKey, state);\n        if (noRedirect) {\n            return redirectUrl;\n        }\n        return await env.redirect(redirectUrl);\n    }\n\n    // Get oauth endpoints and add them to the state\n    const extensions = await getSecurityExtensions(env, serverUrl);\n    Object.assign(state, extensions);\n    await storage.set(stateKey, state);\n\n    // If this happens to be an open server and there is no authorizeUri\n    if (!state.authorizeUri) {\n        if (noRedirect) {\n            return redirectUrl;\n        }\n        return await env.redirect(redirectUrl);\n    }\n\n    // build the redirect uri\n    const redirectParams = [\n        \"response_type=code\",\n        \"client_id=\"    + encodeURIComponent(clientId || \"\"),\n        \"scope=\"        + encodeURIComponent(scope),\n        \"redirect_uri=\" + encodeURIComponent(redirectUri),\n        \"aud=\"          + encodeURIComponent(serverUrl),\n        \"state=\"        + encodeURIComponent(stateKey)\n    ];\n\n    // also pass this in case of EHR launch\n    if (launch) {\n        redirectParams.push(\"launch=\" + encodeURIComponent(launch));\n    }\n\n    if ((pkceMode === 'required') && (!(extensions.codeChallengeMethods.includes('S256')))) {\n      throw new Error(\"Required PKCE code challenge method (`S256`) was not found.\");\n    }\n\n    if ((pkceMode !== 'disabled') && (extensions.codeChallengeMethods.includes('S256'))) {\n      let codes = await security.generatePKCEChallenge()\n      Object.assign(state, codes);\n      await storage.set(stateKey, state); // note that the challenge is ALREADY encoded properly\n  \n      redirectParams.push(\"code_challenge=\" + state.codeChallenge);\n      redirectParams.push(\"code_challenge_method=S256\");\n    }\n  \n    redirectUrl = state.authorizeUri + \"?\" + redirectParams.join(\"&\");\n\n    if (noRedirect) {\n        return redirectUrl;\n    }\n\n    if (target && isBrowser()) {\n        let win: Window;\n\n        win = await getTargetWindow(target, width, height);\n\n        if (win !== self) {\n            try {\n                // Also remove any old state from the target window and then\n                // transfer the current state there\n                win.sessionStorage.removeItem(oldKey);\n                win.sessionStorage.setItem(stateKey, JSON.stringify(state));\n            } catch (ex) {\n                _debug(`Failed to modify window.sessionStorage. Perhaps it is from different origin?. Failing back to \"_self\". %s`, ex);\n                win = self;\n            }\n        }\n\n        if (win !== self) {\n            try {\n                win.location.href = redirectUrl;\n                self.addEventListener(\"message\", onMessage);\n            } catch (ex) {\n                _debug(`Failed to modify window.location. Perhaps it is from different origin?. Failing back to \"_self\". %s`, ex);\n                self.location.href = redirectUrl;\n            }\n        } else {\n            self.location.href = redirectUrl;\n        }\n\n        return;\n    }\n    else {\n        return await env.redirect(redirectUrl);\n    }\n}\n\n/**\n * Checks if called within a frame. Only works in browsers!\n * If the current window has a `parent` or `top` properties that refer to\n * another window, returns true. If trying to access `top` or `parent` throws an\n * error, returns true. Otherwise returns `false`.\n */\nexport function isInFrame() {\n    try {\n        return self !== top && parent !== self;\n    } catch (e) {\n        return true;\n    }\n}\n\n/**\n * Checks if called within another window (popup or tab). Only works in browsers!\n * To consider itself called in a new window, this function verifies that:\n * 1. `self === top` (not in frame)\n * 2. `!!opener && opener !== self` The window has an opener\n * 3. `!!window.name` The window has a `name` set\n */\nexport function isInPopUp() {\n    try {\n        return self === top &&\n               !!opener &&\n               opener !== self &&\n               !!window.name;\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Another window can send a \"completeAuth\" message to this one, making it to\n * navigate to e.data.url\n * @param e The message event\n */\nexport function onMessage(e: MessageEvent) {\n    if (e.data.type == \"completeAuth\" && e.origin === new URL(self.location.href).origin) {\n        window.removeEventListener(\"message\", onMessage);\n        window.location.href = e.data.url;\n    }\n}\n\n/**\n * The completeAuth function should only be called on the page that represents\n * the redirectUri. We typically land there after a redirect from the\n * authorization server..\n */\nexport async function completeAuth(env: fhirclient.Adapter): Promise<Client>\n{\n    const url = env.getUrl();\n    const Storage = env.getStorage();\n    const params = url.searchParams;\n\n    let key                    = params.get(\"state\");\n    const code                 = params.get(\"code\");\n    const authError            = params.get(\"error\");\n    const authErrorDescription = params.get(\"error_description\");\n\n    if (!key) {\n        key = await Storage.get(SMART_KEY);\n    }\n\n    // Start by checking the url for `error` and `error_description` parameters.\n    // This happens when the auth server rejects our authorization attempt. In\n    // this case it has no other way to tell us what the error was, other than\n    // appending these parameters to the redirect url.\n    // From client's point of view, this is not very reliable (because we can't\n    // know how we have landed on this page - was it a redirect or was it loaded\n    // manually). However, if `completeAuth()` is being called, we can assume\n    // that the url comes from the auth server (otherwise the app won't work\n    // anyway).\n    if (authError || authErrorDescription) {\n        throw new Error([\n            authError,\n            authErrorDescription\n        ].filter(Boolean).join(\": \"));\n    }\n\n    debug(\"key: %s, code: %s\", key, code);\n\n    // key might be coming from the page url so it might be empty or missing\n    assert(key, \"No 'state' parameter found. Please (re)launch the app.\");\n\n    // Check if we have a previous state\n    let state = (await Storage.get(key)) as fhirclient.ClientState;\n\n    const fullSessionStorageSupport = isBrowser() ?\n        getPath(env, \"options.fullSessionStorageSupport\") :\n        true;\n\n    // If we are in a popup window or an iframe and the authorization is\n    // complete, send the location back to our opener and exit.\n    if (isBrowser() && state && !state.completeInTarget) {\n\n        const inFrame = isInFrame();\n        const inPopUp = isInPopUp();\n\n        // we are about to return to the opener/parent where completeAuth will\n        // be called again. In rare cases the opener or parent might also be\n        // a frame or popup. Then inFrame or inPopUp will be true but we still\n        // have to stop going up the chain. To guard against that weird form of\n        // recursion we pass one additional parameter to the url which we later\n        // remove.\n        if ((inFrame || inPopUp) && !url.searchParams.get(\"complete\")) {\n            url.searchParams.set(\"complete\", \"1\");\n            const { href, origin } = url;\n            if (inFrame) {\n                parent.postMessage({ type: \"completeAuth\", url: href }, origin);\n            }\n            if (inPopUp) {\n                opener.postMessage({ type: \"completeAuth\", url: href }, origin);\n                window.close();\n            }\n\n            return new Promise(() => { /* leave it pending!!! */ });\n        }\n    }\n\n    url.searchParams.delete(\"complete\");\n\n    // Do we have to remove the `code` and `state` params from the URL?\n    const hasState = params.has(\"state\");\n\n    if (isBrowser() && getPath(env, \"options.replaceBrowserHistory\") && (code || hasState)) {\n        // `code` is the flag that tell us to request an access token.\n        // We have to remove it, otherwise the page will authorize on\n        // every load!\n        if (code) {\n            params.delete(\"code\");\n            debug(\"Removed code parameter from the url.\");\n        }\n\n        // If we have `fullSessionStorageSupport` it means we no longer\n        // need the `state` key. It will be stored to a well know\n        // location - sessionStorage[SMART_KEY]. However, no\n        // fullSessionStorageSupport means that this \"well know location\"\n        // might be shared between windows and tabs. In this case we\n        // MUST keep the `state` url parameter.\n        if (hasState && fullSessionStorageSupport) {\n            params.delete(\"state\");\n            debug(\"Removed state parameter from the url.\");\n        }\n\n        // If the browser does not support the replaceState method for the\n        // History Web API, the \"code\" parameter cannot be removed. As a\n        // consequence, the page will (re)authorize on every load. The\n        // workaround is to reload the page to new location without those\n        // parameters. If that is not acceptable replaceBrowserHistory\n        // should be set to false.\n        if (window.history.replaceState) {\n            window.history.replaceState({}, \"\", url.href);\n        }\n    }\n\n    // If the state does not exist, it means the page has been loaded directly.\n    assert(state, \"No state found! Please (re)launch the app.\");\n\n    // Assume the client has already completed a token exchange when\n    // there is no code (but we have a state) or access token is found in state\n    const authorized = !code || state.tokenResponse?.access_token;\n\n    // If we are authorized already, then this is just a reload.\n    // Otherwise, we have to complete the code flow\n    if (!authorized && state.tokenUri) {\n\n        assert(code, \"'code' url parameter is required\");\n\n        debug(\"Preparing to exchange the code for access token...\");\n        const requestOptions = await buildTokenRequest(env, code, state);\n        debug(\"Token request options: %O\", requestOptions);\n\n        // The EHR authorization server SHALL return a JSON structure that\n        // includes an access token or a message indicating that the\n        // authorization request has been denied.\n        const tokenResponse = await request<fhirclient.TokenResponse>(state.tokenUri, requestOptions);\n        debug(\"Token response: %O\", tokenResponse);\n        assert(tokenResponse.access_token, \"Failed to obtain access token.\");\n\n        // Now we need to determine when is this authorization going to expire\n        state.expiresAt = getAccessTokenExpiration(tokenResponse, env);\n\n        // save the tokenResponse so that we don't have to re-authorize on\n        // every page reload\n        state = { ...state, tokenResponse };\n        await Storage.set(key, state);\n        debug(\"Authorization successful!\");\n    }\n    else {\n        debug(state.tokenResponse?.access_token ?\n            \"Already authorized\" :\n            \"No authorization needed\"\n        );\n    }\n\n    if (fullSessionStorageSupport) {\n        await Storage.set(SMART_KEY, key);\n    }\n\n    const client = new Client(env, state);\n    debug(\"Created client instance: %O\", client);\n    return client;\n}\n\n/**\n * Builds the token request options. Does not make the request, just\n * creates it's configuration and returns it in a Promise.\n */\nexport async function buildTokenRequest(env: fhirclient.Adapter, code: string, state: fhirclient.ClientState): Promise<RequestInit>\n{\n    const { redirectUri, clientSecret, clientPublicKeySetUrl, clientPrivateJwk, tokenUri, clientId, codeVerifier } = state;\n\n    assert(redirectUri, \"Missing state.redirectUri\");\n    assert(tokenUri, \"Missing state.tokenUri\");\n    assert(clientId, \"Missing state.clientId\");\n\n    const requestOptions: Record<string, any> = {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n        body: `code=${code}&grant_type=authorization_code&redirect_uri=${\n            encodeURIComponent(redirectUri)}`\n    };\n\n    // For public apps, authentication is not possible (and thus not required),\n    // since a client with no secret cannot prove its identity when it issues a\n    // call. (The end-to-end system can still be secure because the client comes\n    // from a known, https protected endpoint specified and enforced by the\n    // redirect uri.) For confidential apps, an Authorization header using HTTP\n    // Basic authentication is required, where the username is the app’s\n    // client_id and the password is the app’s client_secret (see example).\n    if (clientSecret) {\n        requestOptions.headers.Authorization = \"Basic \" + env.btoa(\n            clientId + \":\" + clientSecret\n        );\n        debug(\"Using state.clientSecret to construct the authorization header: %s\", requestOptions.headers.Authorization);\n    } else if (clientPrivateJwk) {\n        const clientPrivateKey = await security.importKey(clientPrivateJwk)\n\n        const jwtHeaders = {\n            typ: \"JWT\",\n            kid: clientPrivateJwk.kid,\n            jku: clientPublicKeySetUrl\n        };\n\n        const jwtClaims = {\n            iss: clientId,\n            sub: clientId,\n            aud: tokenUri,\n            jti: security.base64urlencode(security.randomBytes(32)),\n            exp: getTimeInFuture(120) // two minutes in the future\n        };\n        \n        const clientAssertion = await security.signCompactJws(clientPrivateJwk.alg, clientPrivateKey, jwtHeaders, jwtClaims);\n        requestOptions.body += `&client_assertion_type=${encodeURIComponent(\"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\")}`;\n        requestOptions.body += `&client_assertion=${encodeURIComponent(clientAssertion)}`;\n        debug(\"Using state.clientPrivateJwk to add a client_assertion to the POST body\")\n\n    } else {\n        debug(\"Public client detected; adding state.clientId to the POST body\");\n        requestOptions.body += `&client_id=${encodeURIComponent(clientId)}`;\n    }\n\n    if (codeVerifier) {\n      debug(\"Found state.codeVerifier, adding to the POST body\")\n      // Note that the codeVerifier is ALREADY encoded properly  \n      requestOptions.body += \"&code_verifier=\" + codeVerifier;\n    }\n  \n    return requestOptions as RequestInit;\n}\n\n/**\n * @param env\n * @param [onSuccess]\n * @param [onError]\n */\nexport async function ready(env: fhirclient.Adapter, onSuccess?: (client: Client) => any, onError?: (error: Error) => any): Promise<Client>\n{\n    let task = completeAuth(env);\n    if (onSuccess) {\n        task = task.then(onSuccess);\n    }\n    if (onError) {\n        task = task.catch(onError);\n    }\n    return task;\n}\n\n/**\n * This function can be used when you want to handle everything in one page\n * (no launch endpoint needed). You can think of it as if it does:\n * ```js\n * authorize(options).then(ready)\n * ```\n *\n * **Be careful with init()!** There are some details you need to be aware of:\n *\n * 1. It will only work if your launch_uri is the same as your redirect_uri.\n *    While this should be valid, we can’t promise that every EHR will allow you\n *    to register client with such settings.\n * 2. Internally, `init()` will be called twice. First it will redirect to the\n *    EHR, then the EHR will redirect back to the page where init() will be\n *    called again to complete the authorization. This is generally fine,\n *    because the returned promise will only be resolved once, after the second\n *    execution, but please also consider the following:\n *    - You should wrap all your app’s code in a function that is only executed\n *      after `init()` resolves!\n *    - Since the page will be loaded twice, you must be careful if your code\n *      has global side effects that can persist between page reloads\n *      (for example writing to localStorage).\n * 3. For standalone launch, only use init in combination with offline_access\n *    scope. Once the access_token expires, if you don’t have a refresh_token\n *    there is no way to re-authorize properly. We detect that and delete the\n *    expired access token, but it still means that the user will have to\n *    refresh the page twice to re-authorize.\n * @param env The adapter\n * @param options The authorize options\n */\nexport async function init(env: fhirclient.Adapter, options: fhirclient.AuthorizeParams): Promise<Client|never>\n{\n    const url   = env.getUrl();\n    const code  = url.searchParams.get(\"code\");\n    const state = url.searchParams.get(\"state\");\n\n    // if `code` and `state` params are present we need to complete the auth flow\n    if (code && state) {\n        return completeAuth(env);\n    }\n\n    // Check for existing client state. If state is found, it means a client\n    // instance have already been created in this session and we should try to\n    // \"revive\" it.\n    const storage = env.getStorage();\n    const key     = state || await storage.get(SMART_KEY);\n    const cached  = await storage.get(key);\n    if (cached) {\n        return new Client(env, cached);\n    }\n\n    // Otherwise try to launch\n    return authorize(env, options).then(() => {\n        // `init` promises a Client but that cannot happen in this case. The\n        // browser will be redirected (unload the page and be redirected back\n        // to it later and the same init function will be called again). On\n        // success, authorize will resolve with the redirect url but we don't\n        // want to return that from this promise chain because it is not a\n        // Client instance. At the same time, if authorize fails, we do want to\n        // pass the error to those waiting for a client instance.\n        return new Promise(() => { /* leave it pending!!! */ });\n    });\n}\n","export default class Storage\n{\n    /**\n     * Gets the value at `key`. Returns a promise that will be resolved\n     * with that value (or undefined for missing keys).\n     */\n    async get(key: string): Promise<any>\n    {\n        const value = sessionStorage[key];\n        if (value) {\n            return JSON.parse(value);\n        }\n        return null;\n    }\n\n    /**\n     * Sets the `value` on `key` and returns a promise that will be resolved\n     * with the value that was set.\n     */\n    async set(key: string, value: any): Promise<any>\n    {\n        sessionStorage[key] = JSON.stringify(value);\n        return value;\n    }\n\n    /**\n     * Deletes the value at `key`. Returns a promise that will be resolved\n     * with true if the key was deleted or with false if it was not (eg. if\n     * did not exist).\n     */\n    async unset(key: string): Promise<boolean>\n    {\n        if (key in sessionStorage) {\n            delete sessionStorage[key];\n            return true;\n        }\n        return false;\n    }\n\n}\n","// This map contains reusable debug messages (only those used in multiple places)\nexport default {\n    expired      : \"Session expired! Please re-launch the app\",\n    noScopeForId : \"Trying to get the ID of the selected %s. Please add 'launch' or 'launch/%s' to the requested scopes and try again.\",\n    noIfNoAuth   : \"You are trying to get %s but the app is not authorized yet.\",\n    noFreeContext: \"Please don't use open fhir servers if you need to access launch context items like the %S.\"\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        const protectedHeader = base64url(jwe.protected);\n        try {\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = base64url(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader);\n    }\n    catch (err) {\n        if (err instanceof TypeError) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm = 'sha256') {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token.header };\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = jwk.kty === getKtyFromAlg(alg);\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            throw new JWKSMultipleMatchingKeys();\n        }\n        const cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);\n        if (cached[alg] === undefined) {\n            const keyObject = await importJWK({ ...jwk, ext: true }, alg);\n            if (keyObject instanceof Uint8Array || keyObject.type !== 'public') {\n                throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n            }\n            cached[alg] = keyObject;\n        }\n        return cached[alg];\n    }\n}\nexport function createLocalJWKSet(jwks) {\n    return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));\n}\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { isCloudflareWorkers } from '../runtime/env.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n    }\n    coolingDown() {\n        if (!this._cooldownStarted) {\n            return false;\n        }\n        return Date.now() < this._cooldownStarted + this._cooldownDuration;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            return new Promise((resolve) => {\n                const isDone = () => {\n                    if (this._pendingFetch === undefined) {\n                        resolve();\n                    }\n                    else {\n                        setTimeout(isDone, 5);\n                    }\n                };\n                isDone();\n            });\n        }\n        if (!this._pendingFetch) {\n            this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n                .then((json) => {\n                if (!isJWKSLike(json)) {\n                    throw new JWKSInvalid('JSON Web Key Set malformed');\n                }\n                this._jwks = { keys: json.keys };\n                this._cooldownStarted = Date.now();\n                this._pendingFetch = undefined;\n            })\n                .catch((err) => {\n                this._pendingFetch = undefined;\n                throw err;\n            });\n        }\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    return RemoteJWKSet.prototype.getKey.bind(new RemoteJWKSet(url, options));\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        const protectedHeader = base64url(jws.protected);\n        try {\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    const signature = base64url(jws.signature);\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = base64url(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload Option (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","import { decode as decodeBase64URL, encodeBase64, decodeBase64 } from '../runtime/base64url.js';\nimport { fromSPKI as importPublic } from '../runtime/asn1.js';\nimport { fromPKCS8 as importPrivate } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport formatPEM from '../lib/format_pem.js';\nimport isObject from '../lib/is_object.js';\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return importPublic(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    const spki = getSPKI(x509);\n    return importPublic(spki, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PCKS8 formatted string');\n    }\n    return importPrivate(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    let res;\n    for (let iter = 1; iter <= iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        if (!res) {\n            res = await digest('sha256', buf);\n        }\n        else {\n            res = concat(res, await digest('sha256', buf));\n        }\n    }\n    res = res.slice(0, bits >> 3);\n    return res;\n}\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import invalidKeyInput from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(key);\n    }\n    else {\n        asymmetricTypeCheck(key, usage);\n    }\n};\nexport default checkKeyType;\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import { isCloudflareWorkers, isNodeJs } from '../runtime/env.js';\nfunction unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case isNodeJs() && 'EdDSA': {\n            if (key.algorithm.name !== 'NODE-ED25519' && key.algorithm.name !== 'NODE-ED448')\n                throw unusable('NODE-ED25519 or NODE-ED448');\n            break;\n        }\n        case isCloudflareWorkers() && 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'NODE-ED25519'))\n                throw unusable('NODE-ED25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH':\n            if (!isAlgorithm(key.algorithm, 'ECDH'))\n                throw unusable('ECDH');\n            break;\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = base64url(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = base64url(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, base64url(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = base64url(joseHeader.iv);\n            const tag = base64url(joseHeader.tag);\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","export default (date) => Math.floor(date.getTime() / 1000);\n","export default (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n","export default (actual, ...types) => {\n    let msg = 'Key must be ';\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n};\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if (payload.iat !== undefined || options.maxTokenAge) {\n        if (typeof payload.iat !== 'number') {\n            throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n        }\n        if (payload.exp === undefined && payload.iat > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n","import { isCloudflareWorkers, isNodeJs } from './env.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case (isCloudflareWorkers() || isNodeJs()) && findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case isNodeJs() && findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW':\n            algorithm = { name: 'ECDH', namedCurve: getNamedCurve(keyData) };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        case (isCloudflareWorkers() || isNodeJs()) && 'EdDSA':\n            const namedCurve = getNamedCurve(keyData).toUpperCase();\n            algorithm = { name: `NODE-${namedCurve}`, namedCurve: `NODE-${namedCurve}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    return new Uint8Array(atob(encoded)\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n","import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    if (cek.length << 3 !== expected) {\n        throw new JWEInvalid('Invalid Content Encryption Key length');\n    }\n};\nexport default checkCekLength;\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","import crypto from './webcrypto.js';\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\nexport default digest;\n","import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: 'ECDH',\n        public: publicKey,\n    }, privateKey, Math.ceil(parseInt(privateKey.algorithm.namedCurve.slice(-3), 10) / 8) << 3));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve);\n}\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","export function isCloudflareWorkers() {\n    return typeof WebSocketPair === 'function';\n}\nexport function isNodeJs() {\n    try {\n        return process.versions.node !== undefined;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import { isCloudflareWorkers, isNodeJs } from './env.js';\nimport crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case (isCloudflareWorkers() || isNodeJs()) && 'EdDSA':\n            switch (options === null || options === void 0 ? void 0 : options.crv) {\n                case undefined:\n                case 'Ed25519':\n                    algorithm = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case isNodeJs() && 'Ed448':\n                    algorithm = { name: 'NODE-ED448', namedCurve: 'NODE-ED448' };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW':\n            algorithm = { name: 'ECDH', namedCurve: (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'P-256' };\n            keyUsages = ['deriveKey', 'deriveBits'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_b = options === null || options === void 0 ? void 0 : options.extractable) !== null && _b !== void 0 ? _b : false, keyUsages));\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","import { isCloudflareWorkers, isNodeJs } from './env.js';\nimport crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case (isCloudflareWorkers() || isNodeJs()) && 'OKP':\n            if (jwk.alg !== 'EdDSA') {\n                throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            switch (jwk.crv) {\n                case 'Ed25519':\n                    algorithm = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case isNodeJs() && 'Ed448':\n                    algorithm = { name: 'NODE-ED448', namedCurve: 'NODE-ED448' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"crv\" (Subtype of Key Pair) Parameter value');\n            }\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","import { isCloudflareWorkers, isNodeJs } from './env.js';\nimport { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case (isCloudflareWorkers() || isNodeJs()) && 'EdDSA':\n            const { namedCurve } = algorithm;\n            return { name: namedCurve, namedCurve };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","export default crypto;\nexport function isCryptoKey(key) {\n    try {\n        return (key != null &&\n            typeof key.extractable === 'boolean' &&\n            typeof key.algorithm.name === 'string' &&\n            typeof key.type === 'string');\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to parse the base64url encoded payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","export class JOSEError extends Error {\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n}\nexport class JWTExpired extends JOSEError {\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1769);\n"],"names":["Response","window","debug","extend","resolveRefs","obj","fhirOptions","cache","client","signal","paths","makeArray","resolveReferences","filter","Boolean","map","path","String","trim","p","i","indexOf","length","Promise","resolve","groups","forEach","len","split","push","task","Object","keys","sort","group","then","all","graph","node","getPath","isArray","Array","item","ref","reference","refId","request","url","res","error","getRef","sub","setPath","replace","catch","ex","status","resolveRef","constructor","environment","state","units","_state","serverUrl","assert","match","this","_refreshTask","patient","id","getPatientId","read","requestOptions","reject","Error","options","async","base","absolute","contextualURL","_url","resourceType","pathname","pop","patientCompartment","conformance","fetchConformanceStatement","searchParam","getPatientParam","searchParams","set","href","URL","contextualize","encounter","getEncounterId","user","fhirUser","getFhirUser","getUserId","getUserType","connect","fhir","fhirJs","baseUrl","accessToken","getState","auth","token","username","password","pass","api","patientId","tokenResponse","scope","noScopeForId","authorizeUri","noIfNoAuth","noFreeContext","getIdToken","idToken","id_token","hasOpenid","hasProfile","hasFhirUser","jwtDecode","slice","join","profile","getAuthorizationHeader","btoa","storage","getStorage","key","get","SMART_KEY","unset","create","resource","method","body","JSON","stringify","headers","update","delete","patch","assertJsonPatch","_resolvedRefs","debugRequest","flat","pageLimit","useRefreshToken","onPage","undefined","response","refreshIfNeeded","authHeader","Authorization","result","includeResponse","message","_clearState","expired","data","_data","entry","links","link","next","find","l","relation","nextPage","assign","references","concat","refreshToken","expiresAt","Date","now","refresh","debugRefresh","refresh_token","tokenUri","scopes","hasOfflineAccess","search","hasOnlineAccess","refreshRequestOptions","credentials","refreshTokenWithCredentials","mode","encodeURIComponent","clientSecret","clientId","authorization","access_token","getAccessTokenExpiration","finally","byCode","observations","property","byCodes","getFhirVersion","metadata","fhirVersion","getFhirRelease","v","fhirVersions","HttpError","super","statusText","name","statusCode","bodyUsed","type","json","error_description","text","toJSON","_storage","replaceBrowserHistory","fullSessionStorageSupport","relative","getUrl","location","redirect","to","getAbortController","AbortController","atob","str","getSmartApi","ready","args","authorize","init","adapter","FHIR","oauth2","settings","fetch","_debug","ensureNumerical","value","code","checkResponse","resp","ok","parse","responseToJSON","accept","getAndCache","force","segments","shift","o","arg","env","payload","ret","handleCodeableConcept","concept","observation","coding","condition","cm","kg","any","pq","createEmpty","reduce","out","idx","arr","strLength","charSet","charAt","Math","floor","random","secondsAhead","from","getTime","expires_in","tokenBody","exp","bank","codes","prev","meta","r","x","patientParams","target","width","height","self","parent","top","targetWindow","open","e","screen","frames","operation","op","base64urlencode","jose","base64url","encode","base64urldecode","decode","wcrypto","crypto","subtle","digestSha256","prepared","TextEncoder","buffer","hash","digest","Uint8Array","randomBytes","count","getRandomValues","cryptoRandomBytes","generatePKCEChallenge","entropy","inputBytes","codeVerifier","codeChallenge","importKey","importJWK","jwk","signCompactJws","alg","privateKey","header","SignJWT","setProtectedHeader","sign","isBrowser","fetchWellKnownJson","getSecurityExtensions","console","log","authorization_endpoint","token_endpoint","registrationUri","registration_endpoint","codeChallengeMethods","code_challenge_methods_supported","getSecurityExtensionsFromWellKnownJson","extensions","extension","ext","valueUri","getSecurityExtensionsFromConformanceStatement","params","urlISS","cfg","issMatch","RegExp","test","redirect_uri","clientPrivateJwk","fakeTokenResponse","encounterId","client_id","pkceMode","iss","launch","fhirServiceUrl","redirectUri","noRedirect","completeInTarget","inFrame","isInFrame","inPopUp","isInPopUp","warn","oldKey","stateKey","randomString","redirectUrl","redirectParams","includes","security","win","getTargetWindow","sessionStorage","removeItem","setItem","addEventListener","onMessage","opener","origin","removeEventListener","completeAuth","Storage","authError","authErrorDescription","postMessage","close","hasState","has","history","replaceState","buildTokenRequest","clientPublicKeySetUrl","clientPrivateKey","jwtHeaders","typ","kid","jku","jwtClaims","aud","jti","getTimeInFuture","clientAssertion","onSuccess","onError","cached","exports","formatArgs","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","save","namespaces","load","getItem","process","DEBUG","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","localStorage","localstorage","destroy","warned","colors","formatters","j","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Number","ms","coerce","unshift","format","formatter","val","call","apply","selectColor","defineProperty","enumerable","configurable","delimiter","newDebug","toNamespace","regexp","toString","substring","default","stack","disable","names","skips","enable","substr","charCodeAt","abs","s","m","h","d","plural","msAbs","n","isPlural","round","exec","parseFloat","isFinite","long","fmtShort","compactDecrypt","jwe","decoder","JWEInvalid","protectedHeader","encryptedKey","iv","ciphertext","tag","decrypted","flattenedDecrypt","protected","encrypted_key","plaintext","CompactEncrypt","_flattened","FlattenedEncrypt","setContentEncryptionKey","cek","setInitializationVector","setKeyManagementParameters","parameters","encrypt","_a","unprotected","aad","parsedProt","_b","joseHeader","Map","crit","zip","JOSENotSupported","enc","keyManagementAlgorithms","contentEncryptionAlgorithms","JOSEAlgNotAllowed","resolvedKey","err","TypeError","encoder","additionalData","inflateRaw","inflate","additionalAuthenticatedData","sharedUnprotectedHeader","unprotectedHeader","Symbol","_plaintext","_keyManagementParameters","_protectedHeader","setSharedUnprotectedHeader","_sharedUnprotectedHeader","setUnprotectedHeader","_unprotectedHeader","setAdditionalAuthenticatedData","_aad","_cek","_iv","aadMember","deflated","deflateRaw","deflate","generalDecrypt","recipients","every","recipient","JWEDecryptionFailed","IndividualRecipient","addRecipient","done","GeneralEncrypt","_recipients","_c","flattened","p2c","startsWith","EmbeddedJWK","JWSInvalid","check","description","JWKInvalid","calculateJwkThumbprint","digestAlgorithm","components","kty","crv","y","k","isJWKSLike","jwks","isJWKLike","LocalJWKSet","_cached","WeakMap","JWKSInvalid","_jwks","structuredClone","candidates","candidate","getKtyFromAlg","use","key_ops","JWKSNoMatchingKey","JWKSMultipleMatchingKeys","keyObject","createLocalJWKSet","prototype","getKey","bind","RemoteJWKSet","_options","agent","_timeoutDuration","timeoutDuration","_cooldownDuration","cooldownDuration","coolingDown","_cooldownStarted","reload","_pendingFetch","isCloudflareWorkers","isDone","setTimeout","createRemoteJWKSet","CompactSign","FlattenedSign","jws","signature","compactVerify","verified","flattenedVerify","_payload","b64","algorithms","JWSSignatureVerificationFailed","IndividualSignature","sig","addSignature","GeneralSign","_signatures","signatures","rest","generalVerify","jwtDecrypt","jwt","JWTClaimValidationFailed","EncryptJWT","ProduceJWT","replicateIssuerAsHeader","_replicateIssuerAsHeader","replicateSubjectAsHeader","_replicateSubjectAsHeader","replicateAudienceAsHeader","_replicateAudienceAsHeader","setIssuer","issuer","setSubject","subject","setAudience","audience","setJti","jwtId","setNotBefore","input","nbf","setExpirationTime","setIssuedAt","iat","JWTInvalid","UnsecuredJWT","static","encodedHeader","encodedPayload","jwtVerify","exportSPKI","exportPKCS8","exportJWK","generateKeyPair","generateSecret","getElement","seq","nextPart","parseElement","subarray","byteLength","bytes","position","numberOfDigits","contents","raw","importSPKI","spki","importX509","x509","pem","decodeBase64","buf","tbsCertificate","encodeBase64","spkiFromX509","getSPKI","importPKCS8","pkcs8","octAsKeyObject","oth","wrap","jweAlgorithm","unwrap","TextDecoder","MAX_INT32","buffers","size","acc","p2s","p2sInput","writeUInt32BE","offset","RangeError","uint64be","high","low","uint32be","lengthAndInput","concatKdf","secret","bits","iterations","ceil","iter","bitLength","usage","types","symmetricTypeCheck","algorithm","asymmetricTypeCheck","checkP2s","unusable","prop","isAlgorithm","getHashLength","checkUsage","usages","some","expected","msg","last","checkSigCryptoKey","isNodeJs","getNamedCurve","namedCurve","checkEncCryptoKey","epk","partyUInfo","partyVInfo","apu","apv","sharedSecret","providedCek","providedParameters","ephemeralKey","kwAlg","date","descriptor","actual","sources","parameter","add","Set","isObject","getPrototypeOf","proto","normalizeTyp","audOption","audPayload","tolerance","clockTolerance","currentDate","maxTokenAge","JWTExpired","age","REGEX","matched","minute","hour","day","option","Err","recognizedDefault","recognizedOption","recognized","entries","checkKeySize","getCryptoKey","isCryptoKey","cryptoKey","cryptoKeyCek","genericExport","keyType","keyFormat","extractable","toUpperCase","toSPKI","toPKCS8","findOid","keyData","oid","genericImport","keyUsages","isPublic","fromPKCS8","fromSPKI","unencoded","fromCharCode","encoded","modulusLength","keySize","encKey","macKey","macData","expectedTag","macCheckPassed","cbcDecrypt","tagLength","gcmDecrypt","subtleDigest","deriveKey","publicKey","keyLength","public","generateEpk","ecdhAllowed","cbcEncrypt","encrypted","gcmEncrypt","WebSocketPair","versions","timeout","controller","timedOut","abort","JWKSTimeout","clearTimeout","JOSEError","getModulusLengthOption","publicExponent","subtleMapping","salt","keylen","subtleAlg","wrapAlg","derived","decrypt","subtleDsa","saltLength","subtleRsaEs","a","b","decodeJwt","decoded","decodeProtectedHeader","protectedB64u","parts","captureStackTrace","claim","reason","arguments","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","hasOwnProperty","toStringTag","__webpack_exports__"],"sourceRoot":""}